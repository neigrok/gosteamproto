// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.0
// source: service_playtest.proto

package webui

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CPlaytest_GetInviteOptions_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid *uint32 `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
}

func (x *CPlaytest_GetInviteOptions_Request) Reset() {
	*x = CPlaytest_GetInviteOptions_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_playtest_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPlaytest_GetInviteOptions_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPlaytest_GetInviteOptions_Request) ProtoMessage() {}

func (x *CPlaytest_GetInviteOptions_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_playtest_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPlaytest_GetInviteOptions_Request.ProtoReflect.Descriptor instead.
func (*CPlaytest_GetInviteOptions_Request) Descriptor() ([]byte, []int) {
	return file_service_playtest_proto_rawDescGZIP(), []int{0}
}

func (x *CPlaytest_GetInviteOptions_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

type CPlaytest_GetInviteOptions_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IneligibleFriends []uint32 `protobuf:"varint,1,rep,name=ineligible_friends,json=ineligibleFriends" json:"ineligible_friends,omitempty"`
}

func (x *CPlaytest_GetInviteOptions_Response) Reset() {
	*x = CPlaytest_GetInviteOptions_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_playtest_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPlaytest_GetInviteOptions_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPlaytest_GetInviteOptions_Response) ProtoMessage() {}

func (x *CPlaytest_GetInviteOptions_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_playtest_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPlaytest_GetInviteOptions_Response.ProtoReflect.Descriptor instead.
func (*CPlaytest_GetInviteOptions_Response) Descriptor() ([]byte, []int) {
	return file_service_playtest_proto_rawDescGZIP(), []int{1}
}

func (x *CPlaytest_GetInviteOptions_Response) GetIneligibleFriends() []uint32 {
	if x != nil {
		return x.IneligibleFriends
	}
	return nil
}

type CPlaytest_GetInvites_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InviteId *uint64 `protobuf:"varint,1,opt,name=invite_id,json=inviteId" json:"invite_id,omitempty"`
}

func (x *CPlaytest_GetInvites_Request) Reset() {
	*x = CPlaytest_GetInvites_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_playtest_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPlaytest_GetInvites_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPlaytest_GetInvites_Request) ProtoMessage() {}

func (x *CPlaytest_GetInvites_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_playtest_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPlaytest_GetInvites_Request.ProtoReflect.Descriptor instead.
func (*CPlaytest_GetInvites_Request) Descriptor() ([]byte, []int) {
	return file_service_playtest_proto_rawDescGZIP(), []int{2}
}

func (x *CPlaytest_GetInvites_Request) GetInviteId() uint64 {
	if x != nil && x.InviteId != nil {
		return *x.InviteId
	}
	return 0
}

type CPlaytest_GetInvites_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Invites []*CPlaytest_GetInvites_Response_Invite `protobuf:"bytes,1,rep,name=invites" json:"invites,omitempty"`
}

func (x *CPlaytest_GetInvites_Response) Reset() {
	*x = CPlaytest_GetInvites_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_playtest_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPlaytest_GetInvites_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPlaytest_GetInvites_Response) ProtoMessage() {}

func (x *CPlaytest_GetInvites_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_playtest_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPlaytest_GetInvites_Response.ProtoReflect.Descriptor instead.
func (*CPlaytest_GetInvites_Response) Descriptor() ([]byte, []int) {
	return file_service_playtest_proto_rawDescGZIP(), []int{3}
}

func (x *CPlaytest_GetInvites_Response) GetInvites() []*CPlaytest_GetInvites_Response_Invite {
	if x != nil {
		return x.Invites
	}
	return nil
}

type CPlaytest_GetInvites_Response_Invite struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InviteId       *uint64 `protobuf:"varint,1,opt,name=invite_id,json=inviteId" json:"invite_id,omitempty"`
	Appid          *uint32 `protobuf:"varint,2,opt,name=appid" json:"appid,omitempty"`
	SteamidInviter *uint64 `protobuf:"fixed64,3,opt,name=steamid_inviter,json=steamidInviter" json:"steamid_inviter,omitempty"`
	Status         *int32  `protobuf:"varint,4,opt,name=status" json:"status,omitempty"`
	TimeCreated    *uint32 `protobuf:"varint,5,opt,name=time_created,json=timeCreated" json:"time_created,omitempty"`
	AppName        *string `protobuf:"bytes,6,opt,name=app_name,json=appName" json:"app_name,omitempty"`
}

func (x *CPlaytest_GetInvites_Response_Invite) Reset() {
	*x = CPlaytest_GetInvites_Response_Invite{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_playtest_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPlaytest_GetInvites_Response_Invite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPlaytest_GetInvites_Response_Invite) ProtoMessage() {}

func (x *CPlaytest_GetInvites_Response_Invite) ProtoReflect() protoreflect.Message {
	mi := &file_service_playtest_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPlaytest_GetInvites_Response_Invite.ProtoReflect.Descriptor instead.
func (*CPlaytest_GetInvites_Response_Invite) Descriptor() ([]byte, []int) {
	return file_service_playtest_proto_rawDescGZIP(), []int{4}
}

func (x *CPlaytest_GetInvites_Response_Invite) GetInviteId() uint64 {
	if x != nil && x.InviteId != nil {
		return *x.InviteId
	}
	return 0
}

func (x *CPlaytest_GetInvites_Response_Invite) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CPlaytest_GetInvites_Response_Invite) GetSteamidInviter() uint64 {
	if x != nil && x.SteamidInviter != nil {
		return *x.SteamidInviter
	}
	return 0
}

func (x *CPlaytest_GetInvites_Response_Invite) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *CPlaytest_GetInvites_Response_Invite) GetTimeCreated() uint32 {
	if x != nil && x.TimeCreated != nil {
		return *x.TimeCreated
	}
	return 0
}

func (x *CPlaytest_GetInvites_Response_Invite) GetAppName() string {
	if x != nil && x.AppName != nil {
		return *x.AppName
	}
	return ""
}

type CPlaytest_GetUserStatus_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid *uint32 `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
}

func (x *CPlaytest_GetUserStatus_Request) Reset() {
	*x = CPlaytest_GetUserStatus_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_playtest_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPlaytest_GetUserStatus_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPlaytest_GetUserStatus_Request) ProtoMessage() {}

func (x *CPlaytest_GetUserStatus_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_playtest_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPlaytest_GetUserStatus_Request.ProtoReflect.Descriptor instead.
func (*CPlaytest_GetUserStatus_Request) Descriptor() ([]byte, []int) {
	return file_service_playtest_proto_rawDescGZIP(), []int{5}
}

func (x *CPlaytest_GetUserStatus_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

type CPlaytest_GetUserStatus_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*CPlaytest_GetUserStatus_Response_AppStatus `protobuf:"bytes,1,rep,name=results" json:"results,omitempty"`
}

func (x *CPlaytest_GetUserStatus_Response) Reset() {
	*x = CPlaytest_GetUserStatus_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_playtest_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPlaytest_GetUserStatus_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPlaytest_GetUserStatus_Response) ProtoMessage() {}

func (x *CPlaytest_GetUserStatus_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_playtest_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPlaytest_GetUserStatus_Response.ProtoReflect.Descriptor instead.
func (*CPlaytest_GetUserStatus_Response) Descriptor() ([]byte, []int) {
	return file_service_playtest_proto_rawDescGZIP(), []int{6}
}

func (x *CPlaytest_GetUserStatus_Response) GetResults() []*CPlaytest_GetUserStatus_Response_AppStatus {
	if x != nil {
		return x.Results
	}
	return nil
}

type CPlaytest_GetUserStatus_Response_AppStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid            *uint32 `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Status           *int32  `protobuf:"varint,2,opt,name=status" json:"status,omitempty"`
	InvitesRemaining *int32  `protobuf:"varint,3,opt,name=invites_remaining,json=invitesRemaining" json:"invites_remaining,omitempty"`
	TimeJoined       *uint32 `protobuf:"varint,4,opt,name=time_joined,json=timeJoined" json:"time_joined,omitempty"`
	Packageid        *uint32 `protobuf:"varint,5,opt,name=packageid" json:"packageid,omitempty"`
	InvitesSent      *int32  `protobuf:"varint,6,opt,name=invites_sent,json=invitesSent" json:"invites_sent,omitempty"`
}

func (x *CPlaytest_GetUserStatus_Response_AppStatus) Reset() {
	*x = CPlaytest_GetUserStatus_Response_AppStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_playtest_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPlaytest_GetUserStatus_Response_AppStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPlaytest_GetUserStatus_Response_AppStatus) ProtoMessage() {}

func (x *CPlaytest_GetUserStatus_Response_AppStatus) ProtoReflect() protoreflect.Message {
	mi := &file_service_playtest_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPlaytest_GetUserStatus_Response_AppStatus.ProtoReflect.Descriptor instead.
func (*CPlaytest_GetUserStatus_Response_AppStatus) Descriptor() ([]byte, []int) {
	return file_service_playtest_proto_rawDescGZIP(), []int{7}
}

func (x *CPlaytest_GetUserStatus_Response_AppStatus) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CPlaytest_GetUserStatus_Response_AppStatus) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *CPlaytest_GetUserStatus_Response_AppStatus) GetInvitesRemaining() int32 {
	if x != nil && x.InvitesRemaining != nil {
		return *x.InvitesRemaining
	}
	return 0
}

func (x *CPlaytest_GetUserStatus_Response_AppStatus) GetTimeJoined() uint32 {
	if x != nil && x.TimeJoined != nil {
		return *x.TimeJoined
	}
	return 0
}

func (x *CPlaytest_GetUserStatus_Response_AppStatus) GetPackageid() uint32 {
	if x != nil && x.Packageid != nil {
		return *x.Packageid
	}
	return 0
}

func (x *CPlaytest_GetUserStatus_Response_AppStatus) GetInvitesSent() int32 {
	if x != nil && x.InvitesSent != nil {
		return *x.InvitesSent
	}
	return 0
}

type CPlaytest_RequestInvite_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid   *uint32 `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Steamid *uint64 `protobuf:"fixed64,2,opt,name=steamid" json:"steamid,omitempty"`
}

func (x *CPlaytest_RequestInvite_Request) Reset() {
	*x = CPlaytest_RequestInvite_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_playtest_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPlaytest_RequestInvite_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPlaytest_RequestInvite_Request) ProtoMessage() {}

func (x *CPlaytest_RequestInvite_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_playtest_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPlaytest_RequestInvite_Request.ProtoReflect.Descriptor instead.
func (*CPlaytest_RequestInvite_Request) Descriptor() ([]byte, []int) {
	return file_service_playtest_proto_rawDescGZIP(), []int{8}
}

func (x *CPlaytest_RequestInvite_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CPlaytest_RequestInvite_Request) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

type CPlaytest_RequestInvite_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvitesRemaining *int32 `protobuf:"varint,1,opt,name=invites_remaining,json=invitesRemaining" json:"invites_remaining,omitempty"`
	Status           *int32 `protobuf:"varint,2,opt,name=status" json:"status,omitempty"`
}

func (x *CPlaytest_RequestInvite_Response) Reset() {
	*x = CPlaytest_RequestInvite_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_playtest_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPlaytest_RequestInvite_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPlaytest_RequestInvite_Response) ProtoMessage() {}

func (x *CPlaytest_RequestInvite_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_playtest_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPlaytest_RequestInvite_Response.ProtoReflect.Descriptor instead.
func (*CPlaytest_RequestInvite_Response) Descriptor() ([]byte, []int) {
	return file_service_playtest_proto_rawDescGZIP(), []int{9}
}

func (x *CPlaytest_RequestInvite_Response) GetInvitesRemaining() int32 {
	if x != nil && x.InvitesRemaining != nil {
		return *x.InvitesRemaining
	}
	return 0
}

func (x *CPlaytest_RequestInvite_Response) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

type CPlaytest_UpdateInvites_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InviteIds []uint64 `protobuf:"varint,1,rep,name=invite_ids,json=inviteIds" json:"invite_ids,omitempty"`
	Status    *int32   `protobuf:"varint,2,opt,name=status" json:"status,omitempty"`
}

func (x *CPlaytest_UpdateInvites_Request) Reset() {
	*x = CPlaytest_UpdateInvites_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_playtest_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPlaytest_UpdateInvites_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPlaytest_UpdateInvites_Request) ProtoMessage() {}

func (x *CPlaytest_UpdateInvites_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_playtest_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPlaytest_UpdateInvites_Request.ProtoReflect.Descriptor instead.
func (*CPlaytest_UpdateInvites_Request) Descriptor() ([]byte, []int) {
	return file_service_playtest_proto_rawDescGZIP(), []int{10}
}

func (x *CPlaytest_UpdateInvites_Request) GetInviteIds() []uint64 {
	if x != nil {
		return x.InviteIds
	}
	return nil
}

func (x *CPlaytest_UpdateInvites_Request) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

type CPlaytest_UpdateInvites_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvitesUpdated *uint32 `protobuf:"varint,1,opt,name=invites_updated,json=invitesUpdated" json:"invites_updated,omitempty"`
}

func (x *CPlaytest_UpdateInvites_Response) Reset() {
	*x = CPlaytest_UpdateInvites_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_playtest_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPlaytest_UpdateInvites_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPlaytest_UpdateInvites_Response) ProtoMessage() {}

func (x *CPlaytest_UpdateInvites_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_playtest_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPlaytest_UpdateInvites_Response.ProtoReflect.Descriptor instead.
func (*CPlaytest_UpdateInvites_Response) Descriptor() ([]byte, []int) {
	return file_service_playtest_proto_rawDescGZIP(), []int{11}
}

func (x *CPlaytest_UpdateInvites_Response) GetInvitesUpdated() uint32 {
	if x != nil && x.InvitesUpdated != nil {
		return *x.InvitesUpdated
	}
	return 0
}

var File_service_playtest_proto protoreflect.FileDescriptor

var file_service_playtest_proto_rawDesc = []byte{
	0x0a, 0x16, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x74, 0x65,
	0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x5f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3a, 0x0a, 0x22, 0x43,
	0x50, 0x6c, 0x61, 0x79, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x22, 0x54, 0x0a, 0x23, 0x43, 0x50, 0x6c, 0x61, 0x79,
	0x74, 0x65, 0x73, 0x74, 0x5f, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d,
	0x0a, 0x12, 0x69, 0x6e, 0x65, 0x6c, 0x69, 0x67, 0x69, 0x62, 0x6c, 0x65, 0x5f, 0x66, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x11, 0x69, 0x6e, 0x65, 0x6c,
	0x69, 0x67, 0x69, 0x62, 0x6c, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x22, 0x3b, 0x0a,
	0x1c, 0x43, 0x50, 0x6c, 0x61, 0x79, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x47, 0x65, 0x74, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x73, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x08, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x49, 0x64, 0x22, 0x60, 0x0a, 0x1d, 0x43, 0x50,
	0x6c, 0x61, 0x79, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x07, 0x69,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x43,
	0x50, 0x6c, 0x61, 0x79, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x52, 0x07, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x73, 0x22, 0xe2, 0x01, 0x0a,
	0x24, 0x43, 0x50, 0x6c, 0x61, 0x79, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x47, 0x65, 0x74, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x49,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x74, 0x65, 0x61,
	0x6d, 0x69, 0x64, 0x5f, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x06, 0x52, 0x0e, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x72, 0x12, 0x20, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x08, 0x82, 0xb5, 0x18, 0x04, 0x65, 0x6e, 0x75, 0x6d, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0x37, 0x0a, 0x1f, 0x43, 0x50, 0x6c, 0x61, 0x79, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x22, 0x69, 0x0a, 0x20, 0x43, 0x50,
	0x6c, 0x61, 0x79, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45,
	0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x43, 0x50, 0x6c, 0x61, 0x79, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x5f, 0x41, 0x70, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x07, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0xf3, 0x01, 0x0a, 0x2a, 0x43, 0x50, 0x6c, 0x61, 0x79, 0x74,
	0x65, 0x73, 0x74, 0x5f, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x41, 0x70, 0x70, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0x82, 0xb5, 0x18, 0x04,
	0x65, 0x6e, 0x75, 0x6d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2b, 0x0a, 0x11,
	0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e,
	0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x73,
	0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a,
	0x74, 0x69, 0x6d, 0x65, 0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x73, 0x53, 0x65, 0x6e, 0x74, 0x22, 0x51, 0x0a, 0x1f, 0x43,
	0x50, 0x6c, 0x61, 0x79, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61,
	0x70, 0x70, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x06, 0x52, 0x07, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x22, 0x71,
	0x0a, 0x20, 0x43, 0x50, 0x6c, 0x61, 0x79, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x73, 0x5f, 0x72, 0x65,
	0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x69,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x73, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x12,
	0x20, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x08, 0x82, 0xb5, 0x18, 0x04, 0x65, 0x6e, 0x75, 0x6d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x62, 0x0a, 0x1f, 0x43, 0x50, 0x6c, 0x61, 0x79, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x73, 0x5f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x5f, 0x69,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x49, 0x64, 0x73, 0x12, 0x20, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x08, 0x82, 0xb5, 0x18, 0x04, 0x65, 0x6e, 0x75, 0x6d, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x4b, 0x0a, 0x20, 0x43, 0x50, 0x6c, 0x61, 0x79, 0x74, 0x65,
	0x73, 0x74, 0x5f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x73,
	0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x73, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0e, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x32, 0xb8, 0x03, 0x0a, 0x08, 0x50, 0x6c, 0x61, 0x79, 0x74, 0x65, 0x73, 0x74, 0x12,
	0x5d, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x23, 0x2e, 0x43, 0x50, 0x6c, 0x61, 0x79, 0x74, 0x65, 0x73, 0x74, 0x5f,
	0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x43, 0x50, 0x6c, 0x61, 0x79,
	0x74, 0x65, 0x73, 0x74, 0x5f, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b,
	0x0a, 0x0a, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x73, 0x12, 0x1d, 0x2e, 0x43,
	0x50, 0x6c, 0x61, 0x79, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x73, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x43, 0x50,
	0x6c, 0x61, 0x79, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x0d, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x2e, 0x43,
	0x50, 0x6c, 0x61, 0x79, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21,
	0x2e, 0x43, 0x50, 0x6c, 0x61, 0x79, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x54, 0x0a, 0x0d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x12, 0x20, 0x2e, 0x43, 0x50, 0x6c, 0x61, 0x79, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x5f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x43, 0x50, 0x6c, 0x61, 0x79, 0x74, 0x65, 0x73, 0x74,
	0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x5f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x73, 0x12, 0x20, 0x2e, 0x43, 0x50, 0x6c, 0x61, 0x79,
	0x74, 0x65, 0x73, 0x74, 0x5f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x73, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x43, 0x50, 0x6c,
	0x61, 0x79, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
}

var (
	file_service_playtest_proto_rawDescOnce sync.Once
	file_service_playtest_proto_rawDescData = file_service_playtest_proto_rawDesc
)

func file_service_playtest_proto_rawDescGZIP() []byte {
	file_service_playtest_proto_rawDescOnce.Do(func() {
		file_service_playtest_proto_rawDescData = protoimpl.X.CompressGZIP(file_service_playtest_proto_rawDescData)
	})
	return file_service_playtest_proto_rawDescData
}

var file_service_playtest_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_service_playtest_proto_goTypes = []any{
	(*CPlaytest_GetInviteOptions_Request)(nil),         // 0: CPlaytest_GetInviteOptions_Request
	(*CPlaytest_GetInviteOptions_Response)(nil),        // 1: CPlaytest_GetInviteOptions_Response
	(*CPlaytest_GetInvites_Request)(nil),               // 2: CPlaytest_GetInvites_Request
	(*CPlaytest_GetInvites_Response)(nil),              // 3: CPlaytest_GetInvites_Response
	(*CPlaytest_GetInvites_Response_Invite)(nil),       // 4: CPlaytest_GetInvites_Response_Invite
	(*CPlaytest_GetUserStatus_Request)(nil),            // 5: CPlaytest_GetUserStatus_Request
	(*CPlaytest_GetUserStatus_Response)(nil),           // 6: CPlaytest_GetUserStatus_Response
	(*CPlaytest_GetUserStatus_Response_AppStatus)(nil), // 7: CPlaytest_GetUserStatus_Response_AppStatus
	(*CPlaytest_RequestInvite_Request)(nil),            // 8: CPlaytest_RequestInvite_Request
	(*CPlaytest_RequestInvite_Response)(nil),           // 9: CPlaytest_RequestInvite_Response
	(*CPlaytest_UpdateInvites_Request)(nil),            // 10: CPlaytest_UpdateInvites_Request
	(*CPlaytest_UpdateInvites_Response)(nil),           // 11: CPlaytest_UpdateInvites_Response
}
var file_service_playtest_proto_depIdxs = []int32{
	4,  // 0: CPlaytest_GetInvites_Response.invites:type_name -> CPlaytest_GetInvites_Response_Invite
	7,  // 1: CPlaytest_GetUserStatus_Response.results:type_name -> CPlaytest_GetUserStatus_Response_AppStatus
	0,  // 2: Playtest.GetInviteOptions:input_type -> CPlaytest_GetInviteOptions_Request
	2,  // 3: Playtest.GetInvites:input_type -> CPlaytest_GetInvites_Request
	5,  // 4: Playtest.GetUserStatus:input_type -> CPlaytest_GetUserStatus_Request
	8,  // 5: Playtest.RequestInvite:input_type -> CPlaytest_RequestInvite_Request
	10, // 6: Playtest.UpdateInvites:input_type -> CPlaytest_UpdateInvites_Request
	1,  // 7: Playtest.GetInviteOptions:output_type -> CPlaytest_GetInviteOptions_Response
	3,  // 8: Playtest.GetInvites:output_type -> CPlaytest_GetInvites_Response
	6,  // 9: Playtest.GetUserStatus:output_type -> CPlaytest_GetUserStatus_Response
	9,  // 10: Playtest.RequestInvite:output_type -> CPlaytest_RequestInvite_Response
	11, // 11: Playtest.UpdateInvites:output_type -> CPlaytest_UpdateInvites_Response
	7,  // [7:12] is the sub-list for method output_type
	2,  // [2:7] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_service_playtest_proto_init() }
func file_service_playtest_proto_init() {
	if File_service_playtest_proto != nil {
		return
	}
	file_common_base_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_service_playtest_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*CPlaytest_GetInviteOptions_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_playtest_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*CPlaytest_GetInviteOptions_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_playtest_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*CPlaytest_GetInvites_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_playtest_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*CPlaytest_GetInvites_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_playtest_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*CPlaytest_GetInvites_Response_Invite); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_playtest_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*CPlaytest_GetUserStatus_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_playtest_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*CPlaytest_GetUserStatus_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_playtest_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*CPlaytest_GetUserStatus_Response_AppStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_playtest_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*CPlaytest_RequestInvite_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_playtest_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*CPlaytest_RequestInvite_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_playtest_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*CPlaytest_UpdateInvites_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_playtest_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*CPlaytest_UpdateInvites_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_service_playtest_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_playtest_proto_goTypes,
		DependencyIndexes: file_service_playtest_proto_depIdxs,
		MessageInfos:      file_service_playtest_proto_msgTypes,
	}.Build()
	File_service_playtest_proto = out.File
	file_service_playtest_proto_rawDesc = nil
	file_service_playtest_proto_goTypes = nil
	file_service_playtest_proto_depIdxs = nil
}
