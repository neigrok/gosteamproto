// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.0
// source: service_promotionplanning.proto

package webui

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CPromotionNotificationResults struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NotificationId *uint64 `protobuf:"fixed64,1,opt,name=notification_id,json=notificationId" json:"notification_id,omitempty"`
	TrackingId     *uint64 `protobuf:"fixed64,2,opt,name=tracking_id,json=trackingId" json:"tracking_id,omitempty"`
	EmailAddress   *string `protobuf:"bytes,3,opt,name=email_address,json=emailAddress" json:"email_address,omitempty"`
	Accountid      *uint32 `protobuf:"varint,4,opt,name=accountid" json:"accountid,omitempty"`
	Status         *uint32 `protobuf:"varint,5,opt,name=status" json:"status,omitempty"`
	Type           *int32  `protobuf:"varint,6,opt,name=type" json:"type,omitempty"`
	RtSendTime     *uint32 `protobuf:"varint,7,opt,name=rt_send_time,json=rtSendTime" json:"rt_send_time,omitempty"`
}

func (x *CPromotionNotificationResults) Reset() {
	*x = CPromotionNotificationResults{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_promotionplanning_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPromotionNotificationResults) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPromotionNotificationResults) ProtoMessage() {}

func (x *CPromotionNotificationResults) ProtoReflect() protoreflect.Message {
	mi := &file_service_promotionplanning_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPromotionNotificationResults.ProtoReflect.Descriptor instead.
func (*CPromotionNotificationResults) Descriptor() ([]byte, []int) {
	return file_service_promotionplanning_proto_rawDescGZIP(), []int{0}
}

func (x *CPromotionNotificationResults) GetNotificationId() uint64 {
	if x != nil && x.NotificationId != nil {
		return *x.NotificationId
	}
	return 0
}

func (x *CPromotionNotificationResults) GetTrackingId() uint64 {
	if x != nil && x.TrackingId != nil {
		return *x.TrackingId
	}
	return 0
}

func (x *CPromotionNotificationResults) GetEmailAddress() string {
	if x != nil && x.EmailAddress != nil {
		return *x.EmailAddress
	}
	return ""
}

func (x *CPromotionNotificationResults) GetAccountid() uint32 {
	if x != nil && x.Accountid != nil {
		return *x.Accountid
	}
	return 0
}

func (x *CPromotionNotificationResults) GetStatus() uint32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *CPromotionNotificationResults) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *CPromotionNotificationResults) GetRtSendTime() uint32 {
	if x != nil && x.RtSendTime != nil {
		return *x.RtSendTime
	}
	return 0
}

type CPromotionPlan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PromotionId             *uint64 `protobuf:"fixed64,1,opt,name=promotion_id,json=promotionId" json:"promotion_id,omitempty"`
	AdminJsondata           *string `protobuf:"bytes,2,opt,name=admin_jsondata,json=adminJsondata" json:"admin_jsondata,omitempty"`
	PartnerJsondata         *string `protobuf:"bytes,3,opt,name=partner_jsondata,json=partnerJsondata" json:"partner_jsondata,omitempty"`
	InputJsondata           *string `protobuf:"bytes,4,opt,name=input_jsondata,json=inputJsondata" json:"input_jsondata,omitempty"`
	Rtime32StartTime        *uint32 `protobuf:"varint,5,opt,name=rtime32_start_time,json=rtime32StartTime" json:"rtime32_start_time,omitempty"`
	Rtime32EndTime          *uint32 `protobuf:"varint,6,opt,name=rtime32_end_time,json=rtime32EndTime" json:"rtime32_end_time,omitempty"`
	PartnerId               *uint32 `protobuf:"varint,7,opt,name=partner_id,json=partnerId" json:"partner_id,omitempty"`
	InputAccessKey          *string `protobuf:"bytes,8,opt,name=input_access_key,json=inputAccessKey" json:"input_access_key,omitempty"`
	LastUpdateTime          *uint32 `protobuf:"varint,9,opt,name=last_update_time,json=lastUpdateTime" json:"last_update_time,omitempty"`
	PartnerReadonlyJsondata *string `protobuf:"bytes,10,opt,name=partner_readonly_jsondata,json=partnerReadonlyJsondata" json:"partner_readonly_jsondata,omitempty"`
	PartnerWritableJsondata *string `protobuf:"bytes,11,opt,name=partner_writable_jsondata,json=partnerWritableJsondata" json:"partner_writable_jsondata,omitempty"`
	AssetsReadonlyJsondata  *string `protobuf:"bytes,12,opt,name=assets_readonly_jsondata,json=assetsReadonlyJsondata" json:"assets_readonly_jsondata,omitempty"`
	AssetsWritableJsondata  *string `protobuf:"bytes,13,opt,name=assets_writable_jsondata,json=assetsWritableJsondata" json:"assets_writable_jsondata,omitempty"`
}

func (x *CPromotionPlan) Reset() {
	*x = CPromotionPlan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_promotionplanning_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPromotionPlan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPromotionPlan) ProtoMessage() {}

func (x *CPromotionPlan) ProtoReflect() protoreflect.Message {
	mi := &file_service_promotionplanning_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPromotionPlan.ProtoReflect.Descriptor instead.
func (*CPromotionPlan) Descriptor() ([]byte, []int) {
	return file_service_promotionplanning_proto_rawDescGZIP(), []int{1}
}

func (x *CPromotionPlan) GetPromotionId() uint64 {
	if x != nil && x.PromotionId != nil {
		return *x.PromotionId
	}
	return 0
}

func (x *CPromotionPlan) GetAdminJsondata() string {
	if x != nil && x.AdminJsondata != nil {
		return *x.AdminJsondata
	}
	return ""
}

func (x *CPromotionPlan) GetPartnerJsondata() string {
	if x != nil && x.PartnerJsondata != nil {
		return *x.PartnerJsondata
	}
	return ""
}

func (x *CPromotionPlan) GetInputJsondata() string {
	if x != nil && x.InputJsondata != nil {
		return *x.InputJsondata
	}
	return ""
}

func (x *CPromotionPlan) GetRtime32StartTime() uint32 {
	if x != nil && x.Rtime32StartTime != nil {
		return *x.Rtime32StartTime
	}
	return 0
}

func (x *CPromotionPlan) GetRtime32EndTime() uint32 {
	if x != nil && x.Rtime32EndTime != nil {
		return *x.Rtime32EndTime
	}
	return 0
}

func (x *CPromotionPlan) GetPartnerId() uint32 {
	if x != nil && x.PartnerId != nil {
		return *x.PartnerId
	}
	return 0
}

func (x *CPromotionPlan) GetInputAccessKey() string {
	if x != nil && x.InputAccessKey != nil {
		return *x.InputAccessKey
	}
	return ""
}

func (x *CPromotionPlan) GetLastUpdateTime() uint32 {
	if x != nil && x.LastUpdateTime != nil {
		return *x.LastUpdateTime
	}
	return 0
}

func (x *CPromotionPlan) GetPartnerReadonlyJsondata() string {
	if x != nil && x.PartnerReadonlyJsondata != nil {
		return *x.PartnerReadonlyJsondata
	}
	return ""
}

func (x *CPromotionPlan) GetPartnerWritableJsondata() string {
	if x != nil && x.PartnerWritableJsondata != nil {
		return *x.PartnerWritableJsondata
	}
	return ""
}

func (x *CPromotionPlan) GetAssetsReadonlyJsondata() string {
	if x != nil && x.AssetsReadonlyJsondata != nil {
		return *x.AssetsReadonlyJsondata
	}
	return ""
}

func (x *CPromotionPlan) GetAssetsWritableJsondata() string {
	if x != nil && x.AssetsWritableJsondata != nil {
		return *x.AssetsWritableJsondata
	}
	return ""
}

type CPromotionPlan_CreateSalePageForPromo_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClanAccountId      *uint32 `protobuf:"varint,1,opt,name=clan_account_id,json=clanAccountId" json:"clan_account_id,omitempty"`
	ClanEventGid       *uint64 `protobuf:"fixed64,2,opt,name=clan_event_gid,json=clanEventGid" json:"clan_event_gid,omitempty"`
	RtimeSaleStart     *uint32 `protobuf:"varint,3,opt,name=rtime_sale_start,json=rtimeSaleStart" json:"rtime_sale_start,omitempty"`
	RtimeSaleEnd       *uint32 `protobuf:"varint,4,opt,name=rtime_sale_end,json=rtimeSaleEnd" json:"rtime_sale_end,omitempty"`
	DailyDealGid       *uint64 `protobuf:"fixed64,5,opt,name=daily_deal_gid,json=dailyDealGid" json:"daily_deal_gid,omitempty"`
	PromotionGid       *uint64 `protobuf:"fixed64,6,opt,name=promotion_gid,json=promotionGid" json:"promotion_gid,omitempty"`
	CreateAssetRequest *bool   `protobuf:"varint,7,opt,name=create_asset_request,json=createAssetRequest" json:"create_asset_request,omitempty"`
	PartnerId          *uint32 `protobuf:"varint,8,opt,name=partner_id,json=partnerId" json:"partner_id,omitempty"`
	AdvertisingAppid   *uint32 `protobuf:"varint,9,opt,name=advertising_appid,json=advertisingAppid" json:"advertising_appid,omitempty"`
}

func (x *CPromotionPlan_CreateSalePageForPromo_Request) Reset() {
	*x = CPromotionPlan_CreateSalePageForPromo_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_promotionplanning_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPromotionPlan_CreateSalePageForPromo_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPromotionPlan_CreateSalePageForPromo_Request) ProtoMessage() {}

func (x *CPromotionPlan_CreateSalePageForPromo_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_promotionplanning_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPromotionPlan_CreateSalePageForPromo_Request.ProtoReflect.Descriptor instead.
func (*CPromotionPlan_CreateSalePageForPromo_Request) Descriptor() ([]byte, []int) {
	return file_service_promotionplanning_proto_rawDescGZIP(), []int{2}
}

func (x *CPromotionPlan_CreateSalePageForPromo_Request) GetClanAccountId() uint32 {
	if x != nil && x.ClanAccountId != nil {
		return *x.ClanAccountId
	}
	return 0
}

func (x *CPromotionPlan_CreateSalePageForPromo_Request) GetClanEventGid() uint64 {
	if x != nil && x.ClanEventGid != nil {
		return *x.ClanEventGid
	}
	return 0
}

func (x *CPromotionPlan_CreateSalePageForPromo_Request) GetRtimeSaleStart() uint32 {
	if x != nil && x.RtimeSaleStart != nil {
		return *x.RtimeSaleStart
	}
	return 0
}

func (x *CPromotionPlan_CreateSalePageForPromo_Request) GetRtimeSaleEnd() uint32 {
	if x != nil && x.RtimeSaleEnd != nil {
		return *x.RtimeSaleEnd
	}
	return 0
}

func (x *CPromotionPlan_CreateSalePageForPromo_Request) GetDailyDealGid() uint64 {
	if x != nil && x.DailyDealGid != nil {
		return *x.DailyDealGid
	}
	return 0
}

func (x *CPromotionPlan_CreateSalePageForPromo_Request) GetPromotionGid() uint64 {
	if x != nil && x.PromotionGid != nil {
		return *x.PromotionGid
	}
	return 0
}

func (x *CPromotionPlan_CreateSalePageForPromo_Request) GetCreateAssetRequest() bool {
	if x != nil && x.CreateAssetRequest != nil {
		return *x.CreateAssetRequest
	}
	return false
}

func (x *CPromotionPlan_CreateSalePageForPromo_Request) GetPartnerId() uint32 {
	if x != nil && x.PartnerId != nil {
		return *x.PartnerId
	}
	return 0
}

func (x *CPromotionPlan_CreateSalePageForPromo_Request) GetAdvertisingAppid() uint32 {
	if x != nil && x.AdvertisingAppid != nil {
		return *x.AdvertisingAppid
	}
	return 0
}

type CPromotionPlan_CreateSalePageForPromo_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClanAccountId    *uint32 `protobuf:"varint,1,opt,name=clan_account_id,json=clanAccountId" json:"clan_account_id,omitempty"`
	ClanEventGid     *uint64 `protobuf:"fixed64,2,opt,name=clan_event_gid,json=clanEventGid" json:"clan_event_gid,omitempty"`
	DailyDealGid     *uint64 `protobuf:"fixed64,3,opt,name=daily_deal_gid,json=dailyDealGid" json:"daily_deal_gid,omitempty"`
	PromotionGid     *uint64 `protobuf:"fixed64,4,opt,name=promotion_gid,json=promotionGid" json:"promotion_gid,omitempty"`
	AssetRequestGid  *uint64 `protobuf:"fixed64,5,opt,name=asset_request_gid,json=assetRequestGid" json:"asset_request_gid,omitempty"`
	AdvertisingAppid *uint32 `protobuf:"varint,6,opt,name=advertising_appid,json=advertisingAppid" json:"advertising_appid,omitempty"`
}

func (x *CPromotionPlan_CreateSalePageForPromo_Response) Reset() {
	*x = CPromotionPlan_CreateSalePageForPromo_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_promotionplanning_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPromotionPlan_CreateSalePageForPromo_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPromotionPlan_CreateSalePageForPromo_Response) ProtoMessage() {}

func (x *CPromotionPlan_CreateSalePageForPromo_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_promotionplanning_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPromotionPlan_CreateSalePageForPromo_Response.ProtoReflect.Descriptor instead.
func (*CPromotionPlan_CreateSalePageForPromo_Response) Descriptor() ([]byte, []int) {
	return file_service_promotionplanning_proto_rawDescGZIP(), []int{3}
}

func (x *CPromotionPlan_CreateSalePageForPromo_Response) GetClanAccountId() uint32 {
	if x != nil && x.ClanAccountId != nil {
		return *x.ClanAccountId
	}
	return 0
}

func (x *CPromotionPlan_CreateSalePageForPromo_Response) GetClanEventGid() uint64 {
	if x != nil && x.ClanEventGid != nil {
		return *x.ClanEventGid
	}
	return 0
}

func (x *CPromotionPlan_CreateSalePageForPromo_Response) GetDailyDealGid() uint64 {
	if x != nil && x.DailyDealGid != nil {
		return *x.DailyDealGid
	}
	return 0
}

func (x *CPromotionPlan_CreateSalePageForPromo_Response) GetPromotionGid() uint64 {
	if x != nil && x.PromotionGid != nil {
		return *x.PromotionGid
	}
	return 0
}

func (x *CPromotionPlan_CreateSalePageForPromo_Response) GetAssetRequestGid() uint64 {
	if x != nil && x.AssetRequestGid != nil {
		return *x.AssetRequestGid
	}
	return 0
}

func (x *CPromotionPlan_CreateSalePageForPromo_Response) GetAdvertisingAppid() uint32 {
	if x != nil && x.AdvertisingAppid != nil {
		return *x.AdvertisingAppid
	}
	return 0
}

type CPromotionPlan_GetPromotionPlanSalesDaily_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Promotionids []uint64 `protobuf:"varint,1,rep,name=promotionids" json:"promotionids,omitempty"`
	Partnerid    *uint32  `protobuf:"varint,2,opt,name=partnerid" json:"partnerid,omitempty"`
}

func (x *CPromotionPlan_GetPromotionPlanSalesDaily_Request) Reset() {
	*x = CPromotionPlan_GetPromotionPlanSalesDaily_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_promotionplanning_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPromotionPlan_GetPromotionPlanSalesDaily_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPromotionPlan_GetPromotionPlanSalesDaily_Request) ProtoMessage() {}

func (x *CPromotionPlan_GetPromotionPlanSalesDaily_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_promotionplanning_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPromotionPlan_GetPromotionPlanSalesDaily_Request.ProtoReflect.Descriptor instead.
func (*CPromotionPlan_GetPromotionPlanSalesDaily_Request) Descriptor() ([]byte, []int) {
	return file_service_promotionplanning_proto_rawDescGZIP(), []int{4}
}

func (x *CPromotionPlan_GetPromotionPlanSalesDaily_Request) GetPromotionids() []uint64 {
	if x != nil {
		return x.Promotionids
	}
	return nil
}

func (x *CPromotionPlan_GetPromotionPlanSalesDaily_Request) GetPartnerid() uint32 {
	if x != nil && x.Partnerid != nil {
		return *x.Partnerid
	}
	return 0
}

type CPromotionPlan_GetPromotionPlanSalesDaily_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sales         []*CPromotionPlan_GetPromotionPlanSalesDaily_Response_PromotionSaleData `protobuf:"bytes,1,rep,name=sales" json:"sales,omitempty"`
	PartialAccess *bool                                                                   `protobuf:"varint,2,opt,name=partial_access,json=partialAccess" json:"partial_access,omitempty"`
}

func (x *CPromotionPlan_GetPromotionPlanSalesDaily_Response) Reset() {
	*x = CPromotionPlan_GetPromotionPlanSalesDaily_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_promotionplanning_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPromotionPlan_GetPromotionPlanSalesDaily_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPromotionPlan_GetPromotionPlanSalesDaily_Response) ProtoMessage() {}

func (x *CPromotionPlan_GetPromotionPlanSalesDaily_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_promotionplanning_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPromotionPlan_GetPromotionPlanSalesDaily_Response.ProtoReflect.Descriptor instead.
func (*CPromotionPlan_GetPromotionPlanSalesDaily_Response) Descriptor() ([]byte, []int) {
	return file_service_promotionplanning_proto_rawDescGZIP(), []int{5}
}

func (x *CPromotionPlan_GetPromotionPlanSalesDaily_Response) GetSales() []*CPromotionPlan_GetPromotionPlanSalesDaily_Response_PromotionSaleData {
	if x != nil {
		return x.Sales
	}
	return nil
}

func (x *CPromotionPlan_GetPromotionPlanSalesDaily_Response) GetPartialAccess() bool {
	if x != nil && x.PartialAccess != nil {
		return *x.PartialAccess
	}
	return false
}

type CPromotionPlan_GetPromotionPlanSalesDaily_Response_DailyPromotionSales struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RtimeDate    *uint32                           `protobuf:"varint,1,opt,name=rtime_date,json=rtimeDate" json:"rtime_date,omitempty"`
	Date         *string                           `protobuf:"bytes,2,opt,name=date" json:"date,omitempty"`
	SummarySales *CPromotionPlan_SummarySaleResult `protobuf:"bytes,3,opt,name=summary_sales,json=summarySales" json:"summary_sales,omitempty"`
}

func (x *CPromotionPlan_GetPromotionPlanSalesDaily_Response_DailyPromotionSales) Reset() {
	*x = CPromotionPlan_GetPromotionPlanSalesDaily_Response_DailyPromotionSales{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_promotionplanning_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPromotionPlan_GetPromotionPlanSalesDaily_Response_DailyPromotionSales) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPromotionPlan_GetPromotionPlanSalesDaily_Response_DailyPromotionSales) ProtoMessage() {}

func (x *CPromotionPlan_GetPromotionPlanSalesDaily_Response_DailyPromotionSales) ProtoReflect() protoreflect.Message {
	mi := &file_service_promotionplanning_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPromotionPlan_GetPromotionPlanSalesDaily_Response_DailyPromotionSales.ProtoReflect.Descriptor instead.
func (*CPromotionPlan_GetPromotionPlanSalesDaily_Response_DailyPromotionSales) Descriptor() ([]byte, []int) {
	return file_service_promotionplanning_proto_rawDescGZIP(), []int{6}
}

func (x *CPromotionPlan_GetPromotionPlanSalesDaily_Response_DailyPromotionSales) GetRtimeDate() uint32 {
	if x != nil && x.RtimeDate != nil {
		return *x.RtimeDate
	}
	return 0
}

func (x *CPromotionPlan_GetPromotionPlanSalesDaily_Response_DailyPromotionSales) GetDate() string {
	if x != nil && x.Date != nil {
		return *x.Date
	}
	return ""
}

func (x *CPromotionPlan_GetPromotionPlanSalesDaily_Response_DailyPromotionSales) GetSummarySales() *CPromotionPlan_SummarySaleResult {
	if x != nil {
		return x.SummarySales
	}
	return nil
}

type CPromotionPlan_GetPromotionPlanSalesDaily_Response_Product struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid              *uint32                                                                   `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Packageid          *uint32                                                                   `protobuf:"varint,2,opt,name=packageid" json:"packageid,omitempty"`
	SecondaryProductId *uint32                                                                   `protobuf:"varint,3,opt,name=secondary_product_id,json=secondaryProductId" json:"secondary_product_id,omitempty"`
	SummarySales       *CPromotionPlan_SummarySaleResult                                         `protobuf:"bytes,4,opt,name=summary_sales,json=summarySales" json:"summary_sales,omitempty"`
	DailyPromoSales    []*CPromotionPlan_GetPromotionPlanSalesDaily_Response_DailyPromotionSales `protobuf:"bytes,5,rep,name=daily_promo_sales,json=dailyPromoSales" json:"daily_promo_sales,omitempty"`
	PackageBillingType *uint32                                                                   `protobuf:"varint,6,opt,name=package_billing_type,json=packageBillingType" json:"package_billing_type,omitempty"`
}

func (x *CPromotionPlan_GetPromotionPlanSalesDaily_Response_Product) Reset() {
	*x = CPromotionPlan_GetPromotionPlanSalesDaily_Response_Product{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_promotionplanning_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPromotionPlan_GetPromotionPlanSalesDaily_Response_Product) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPromotionPlan_GetPromotionPlanSalesDaily_Response_Product) ProtoMessage() {}

func (x *CPromotionPlan_GetPromotionPlanSalesDaily_Response_Product) ProtoReflect() protoreflect.Message {
	mi := &file_service_promotionplanning_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPromotionPlan_GetPromotionPlanSalesDaily_Response_Product.ProtoReflect.Descriptor instead.
func (*CPromotionPlan_GetPromotionPlanSalesDaily_Response_Product) Descriptor() ([]byte, []int) {
	return file_service_promotionplanning_proto_rawDescGZIP(), []int{7}
}

func (x *CPromotionPlan_GetPromotionPlanSalesDaily_Response_Product) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CPromotionPlan_GetPromotionPlanSalesDaily_Response_Product) GetPackageid() uint32 {
	if x != nil && x.Packageid != nil {
		return *x.Packageid
	}
	return 0
}

func (x *CPromotionPlan_GetPromotionPlanSalesDaily_Response_Product) GetSecondaryProductId() uint32 {
	if x != nil && x.SecondaryProductId != nil {
		return *x.SecondaryProductId
	}
	return 0
}

func (x *CPromotionPlan_GetPromotionPlanSalesDaily_Response_Product) GetSummarySales() *CPromotionPlan_SummarySaleResult {
	if x != nil {
		return x.SummarySales
	}
	return nil
}

func (x *CPromotionPlan_GetPromotionPlanSalesDaily_Response_Product) GetDailyPromoSales() []*CPromotionPlan_GetPromotionPlanSalesDaily_Response_DailyPromotionSales {
	if x != nil {
		return x.DailyPromoSales
	}
	return nil
}

func (x *CPromotionPlan_GetPromotionPlanSalesDaily_Response_Product) GetPackageBillingType() uint32 {
	if x != nil && x.PackageBillingType != nil {
		return *x.PackageBillingType
	}
	return 0
}

type CPromotionPlan_GetPromotionPlanSalesDaily_Response_PromotionSaleData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Promotionid     *uint64                                                                   `protobuf:"varint,1,opt,name=promotionid" json:"promotionid,omitempty"`
	DailyPromoSales []*CPromotionPlan_GetPromotionPlanSalesDaily_Response_DailyPromotionSales `protobuf:"bytes,2,rep,name=daily_promo_sales,json=dailyPromoSales" json:"daily_promo_sales,omitempty"`
	SummarySales    *CPromotionPlan_SummarySaleResult                                         `protobuf:"bytes,3,opt,name=summary_sales,json=summarySales" json:"summary_sales,omitempty"`
	Products        []*CPromotionPlan_GetPromotionPlanSalesDaily_Response_Product             `protobuf:"bytes,4,rep,name=products" json:"products,omitempty"`
}

func (x *CPromotionPlan_GetPromotionPlanSalesDaily_Response_PromotionSaleData) Reset() {
	*x = CPromotionPlan_GetPromotionPlanSalesDaily_Response_PromotionSaleData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_promotionplanning_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPromotionPlan_GetPromotionPlanSalesDaily_Response_PromotionSaleData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPromotionPlan_GetPromotionPlanSalesDaily_Response_PromotionSaleData) ProtoMessage() {}

func (x *CPromotionPlan_GetPromotionPlanSalesDaily_Response_PromotionSaleData) ProtoReflect() protoreflect.Message {
	mi := &file_service_promotionplanning_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPromotionPlan_GetPromotionPlanSalesDaily_Response_PromotionSaleData.ProtoReflect.Descriptor instead.
func (*CPromotionPlan_GetPromotionPlanSalesDaily_Response_PromotionSaleData) Descriptor() ([]byte, []int) {
	return file_service_promotionplanning_proto_rawDescGZIP(), []int{8}
}

func (x *CPromotionPlan_GetPromotionPlanSalesDaily_Response_PromotionSaleData) GetPromotionid() uint64 {
	if x != nil && x.Promotionid != nil {
		return *x.Promotionid
	}
	return 0
}

func (x *CPromotionPlan_GetPromotionPlanSalesDaily_Response_PromotionSaleData) GetDailyPromoSales() []*CPromotionPlan_GetPromotionPlanSalesDaily_Response_DailyPromotionSales {
	if x != nil {
		return x.DailyPromoSales
	}
	return nil
}

func (x *CPromotionPlan_GetPromotionPlanSalesDaily_Response_PromotionSaleData) GetSummarySales() *CPromotionPlan_SummarySaleResult {
	if x != nil {
		return x.SummarySales
	}
	return nil
}

func (x *CPromotionPlan_GetPromotionPlanSalesDaily_Response_PromotionSaleData) GetProducts() []*CPromotionPlan_GetPromotionPlanSalesDaily_Response_Product {
	if x != nil {
		return x.Products
	}
	return nil
}

type CPromotionPlan_SummarySaleResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalGrossSalesUsdx100    *int64 `protobuf:"varint,1,opt,name=total_gross_sales_usdx100,json=totalGrossSalesUsdx100" json:"total_gross_sales_usdx100,omitempty"`
	TotalGrossReturnsUsdx100  *int64 `protobuf:"varint,2,opt,name=total_gross_returns_usdx100,json=totalGrossReturnsUsdx100" json:"total_gross_returns_usdx100,omitempty"`
	TotalNetTaxUsdx100        *int64 `protobuf:"varint,3,opt,name=total_net_tax_usdx100,json=totalNetTaxUsdx100" json:"total_net_tax_usdx100,omitempty"`
	SteamGrossSalesUsdx100    *int64 `protobuf:"varint,4,opt,name=steam_gross_sales_usdx100,json=steamGrossSalesUsdx100" json:"steam_gross_sales_usdx100,omitempty"`
	SteamGrossReturnsUsdx100  *int64 `protobuf:"varint,5,opt,name=steam_gross_returns_usdx100,json=steamGrossReturnsUsdx100" json:"steam_gross_returns_usdx100,omitempty"`
	SteamNetTaxUsdx100        *int64 `protobuf:"varint,6,opt,name=steam_net_tax_usdx100,json=steamNetTaxUsdx100" json:"steam_net_tax_usdx100,omitempty"`
	InGameGrossSalesUsdx100   *int64 `protobuf:"varint,7,opt,name=in_game_gross_sales_usdx100,json=inGameGrossSalesUsdx100" json:"in_game_gross_sales_usdx100,omitempty"`
	InGameGrossReturnsUsdx100 *int64 `protobuf:"varint,8,opt,name=in_game_gross_returns_usdx100,json=inGameGrossReturnsUsdx100" json:"in_game_gross_returns_usdx100,omitempty"`
	InGameNetTaxUsdx100       *int64 `protobuf:"varint,9,opt,name=in_game_net_tax_usdx100,json=inGameNetTaxUsdx100" json:"in_game_net_tax_usdx100,omitempty"`
	TotalNetSalesUsdx100      *int64 `protobuf:"varint,10,opt,name=total_net_sales_usdx100,json=totalNetSalesUsdx100" json:"total_net_sales_usdx100,omitempty"`
	SteamNetSalesUsdx100      *int64 `protobuf:"varint,11,opt,name=steam_net_sales_usdx100,json=steamNetSalesUsdx100" json:"steam_net_sales_usdx100,omitempty"`
	InGameNetSalesUsdx100     *int64 `protobuf:"varint,12,opt,name=in_game_net_sales_usdx100,json=inGameNetSalesUsdx100" json:"in_game_net_sales_usdx100,omitempty"`
	SteamGrossUnitsSold       *int64 `protobuf:"varint,13,opt,name=steam_gross_units_sold,json=steamGrossUnitsSold" json:"steam_gross_units_sold,omitempty"`
	SteamGrossUnitsReturned   *int64 `protobuf:"varint,14,opt,name=steam_gross_units_returned,json=steamGrossUnitsReturned" json:"steam_gross_units_returned,omitempty"`
	GrossUnitsActivated       *int64 `protobuf:"varint,15,opt,name=gross_units_activated,json=grossUnitsActivated" json:"gross_units_activated,omitempty"`
}

func (x *CPromotionPlan_SummarySaleResult) Reset() {
	*x = CPromotionPlan_SummarySaleResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_promotionplanning_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPromotionPlan_SummarySaleResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPromotionPlan_SummarySaleResult) ProtoMessage() {}

func (x *CPromotionPlan_SummarySaleResult) ProtoReflect() protoreflect.Message {
	mi := &file_service_promotionplanning_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPromotionPlan_SummarySaleResult.ProtoReflect.Descriptor instead.
func (*CPromotionPlan_SummarySaleResult) Descriptor() ([]byte, []int) {
	return file_service_promotionplanning_proto_rawDescGZIP(), []int{9}
}

func (x *CPromotionPlan_SummarySaleResult) GetTotalGrossSalesUsdx100() int64 {
	if x != nil && x.TotalGrossSalesUsdx100 != nil {
		return *x.TotalGrossSalesUsdx100
	}
	return 0
}

func (x *CPromotionPlan_SummarySaleResult) GetTotalGrossReturnsUsdx100() int64 {
	if x != nil && x.TotalGrossReturnsUsdx100 != nil {
		return *x.TotalGrossReturnsUsdx100
	}
	return 0
}

func (x *CPromotionPlan_SummarySaleResult) GetTotalNetTaxUsdx100() int64 {
	if x != nil && x.TotalNetTaxUsdx100 != nil {
		return *x.TotalNetTaxUsdx100
	}
	return 0
}

func (x *CPromotionPlan_SummarySaleResult) GetSteamGrossSalesUsdx100() int64 {
	if x != nil && x.SteamGrossSalesUsdx100 != nil {
		return *x.SteamGrossSalesUsdx100
	}
	return 0
}

func (x *CPromotionPlan_SummarySaleResult) GetSteamGrossReturnsUsdx100() int64 {
	if x != nil && x.SteamGrossReturnsUsdx100 != nil {
		return *x.SteamGrossReturnsUsdx100
	}
	return 0
}

func (x *CPromotionPlan_SummarySaleResult) GetSteamNetTaxUsdx100() int64 {
	if x != nil && x.SteamNetTaxUsdx100 != nil {
		return *x.SteamNetTaxUsdx100
	}
	return 0
}

func (x *CPromotionPlan_SummarySaleResult) GetInGameGrossSalesUsdx100() int64 {
	if x != nil && x.InGameGrossSalesUsdx100 != nil {
		return *x.InGameGrossSalesUsdx100
	}
	return 0
}

func (x *CPromotionPlan_SummarySaleResult) GetInGameGrossReturnsUsdx100() int64 {
	if x != nil && x.InGameGrossReturnsUsdx100 != nil {
		return *x.InGameGrossReturnsUsdx100
	}
	return 0
}

func (x *CPromotionPlan_SummarySaleResult) GetInGameNetTaxUsdx100() int64 {
	if x != nil && x.InGameNetTaxUsdx100 != nil {
		return *x.InGameNetTaxUsdx100
	}
	return 0
}

func (x *CPromotionPlan_SummarySaleResult) GetTotalNetSalesUsdx100() int64 {
	if x != nil && x.TotalNetSalesUsdx100 != nil {
		return *x.TotalNetSalesUsdx100
	}
	return 0
}

func (x *CPromotionPlan_SummarySaleResult) GetSteamNetSalesUsdx100() int64 {
	if x != nil && x.SteamNetSalesUsdx100 != nil {
		return *x.SteamNetSalesUsdx100
	}
	return 0
}

func (x *CPromotionPlan_SummarySaleResult) GetInGameNetSalesUsdx100() int64 {
	if x != nil && x.InGameNetSalesUsdx100 != nil {
		return *x.InGameNetSalesUsdx100
	}
	return 0
}

func (x *CPromotionPlan_SummarySaleResult) GetSteamGrossUnitsSold() int64 {
	if x != nil && x.SteamGrossUnitsSold != nil {
		return *x.SteamGrossUnitsSold
	}
	return 0
}

func (x *CPromotionPlan_SummarySaleResult) GetSteamGrossUnitsReturned() int64 {
	if x != nil && x.SteamGrossUnitsReturned != nil {
		return *x.SteamGrossUnitsReturned
	}
	return 0
}

func (x *CPromotionPlan_SummarySaleResult) GetGrossUnitsActivated() int64 {
	if x != nil && x.GrossUnitsActivated != nil {
		return *x.GrossUnitsActivated
	}
	return 0
}

type CPromotionPlanning_CreatePlan_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plan *CPromotionPlan `protobuf:"bytes,1,opt,name=plan" json:"plan,omitempty"`
}

func (x *CPromotionPlanning_CreatePlan_Request) Reset() {
	*x = CPromotionPlanning_CreatePlan_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_promotionplanning_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPromotionPlanning_CreatePlan_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPromotionPlanning_CreatePlan_Request) ProtoMessage() {}

func (x *CPromotionPlanning_CreatePlan_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_promotionplanning_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPromotionPlanning_CreatePlan_Request.ProtoReflect.Descriptor instead.
func (*CPromotionPlanning_CreatePlan_Request) Descriptor() ([]byte, []int) {
	return file_service_promotionplanning_proto_rawDescGZIP(), []int{10}
}

func (x *CPromotionPlanning_CreatePlan_Request) GetPlan() *CPromotionPlan {
	if x != nil {
		return x.Plan
	}
	return nil
}

type CPromotionPlanning_CreatePlan_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PromotionId    *uint64 `protobuf:"fixed64,1,opt,name=promotion_id,json=promotionId" json:"promotion_id,omitempty"`
	InputAccessKey *string `protobuf:"bytes,2,opt,name=input_access_key,json=inputAccessKey" json:"input_access_key,omitempty"`
}

func (x *CPromotionPlanning_CreatePlan_Response) Reset() {
	*x = CPromotionPlanning_CreatePlan_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_promotionplanning_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPromotionPlanning_CreatePlan_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPromotionPlanning_CreatePlan_Response) ProtoMessage() {}

func (x *CPromotionPlanning_CreatePlan_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_promotionplanning_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPromotionPlanning_CreatePlan_Response.ProtoReflect.Descriptor instead.
func (*CPromotionPlanning_CreatePlan_Response) Descriptor() ([]byte, []int) {
	return file_service_promotionplanning_proto_rawDescGZIP(), []int{11}
}

func (x *CPromotionPlanning_CreatePlan_Response) GetPromotionId() uint64 {
	if x != nil && x.PromotionId != nil {
		return *x.PromotionId
	}
	return 0
}

func (x *CPromotionPlanning_CreatePlan_Response) GetInputAccessKey() string {
	if x != nil && x.InputAccessKey != nil {
		return *x.InputAccessKey
	}
	return ""
}

type CPromotionPlanning_DeletePlan_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PromotionId *uint64 `protobuf:"fixed64,1,opt,name=promotion_id,json=promotionId" json:"promotion_id,omitempty"`
}

func (x *CPromotionPlanning_DeletePlan_Request) Reset() {
	*x = CPromotionPlanning_DeletePlan_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_promotionplanning_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPromotionPlanning_DeletePlan_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPromotionPlanning_DeletePlan_Request) ProtoMessage() {}

func (x *CPromotionPlanning_DeletePlan_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_promotionplanning_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPromotionPlanning_DeletePlan_Request.ProtoReflect.Descriptor instead.
func (*CPromotionPlanning_DeletePlan_Request) Descriptor() ([]byte, []int) {
	return file_service_promotionplanning_proto_rawDescGZIP(), []int{12}
}

func (x *CPromotionPlanning_DeletePlan_Request) GetPromotionId() uint64 {
	if x != nil && x.PromotionId != nil {
		return *x.PromotionId
	}
	return 0
}

type CPromotionPlanning_DeletePlan_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CPromotionPlanning_DeletePlan_Response) Reset() {
	*x = CPromotionPlanning_DeletePlan_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_promotionplanning_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPromotionPlanning_DeletePlan_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPromotionPlanning_DeletePlan_Response) ProtoMessage() {}

func (x *CPromotionPlanning_DeletePlan_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_promotionplanning_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPromotionPlanning_DeletePlan_Response.ProtoReflect.Descriptor instead.
func (*CPromotionPlanning_DeletePlan_Response) Descriptor() ([]byte, []int) {
	return file_service_promotionplanning_proto_rawDescGZIP(), []int{13}
}

type CPromotionPlanning_GetAdvertisingAppsForPartner_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartnerId *uint32 `protobuf:"varint,1,opt,name=partner_id,json=partnerId" json:"partner_id,omitempty"`
}

func (x *CPromotionPlanning_GetAdvertisingAppsForPartner_Request) Reset() {
	*x = CPromotionPlanning_GetAdvertisingAppsForPartner_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_promotionplanning_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPromotionPlanning_GetAdvertisingAppsForPartner_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPromotionPlanning_GetAdvertisingAppsForPartner_Request) ProtoMessage() {}

func (x *CPromotionPlanning_GetAdvertisingAppsForPartner_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_promotionplanning_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPromotionPlanning_GetAdvertisingAppsForPartner_Request.ProtoReflect.Descriptor instead.
func (*CPromotionPlanning_GetAdvertisingAppsForPartner_Request) Descriptor() ([]byte, []int) {
	return file_service_promotionplanning_proto_rawDescGZIP(), []int{14}
}

func (x *CPromotionPlanning_GetAdvertisingAppsForPartner_Request) GetPartnerId() uint32 {
	if x != nil && x.PartnerId != nil {
		return *x.PartnerId
	}
	return 0
}

type CPromotionPlanning_GetAdvertisingAppsForPartner_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdvertisingApps []*CPromotionPlanning_GetAdvertisingAppsForPartner_ResponseAdvertisingApp `protobuf:"bytes,1,rep,name=advertising_apps,json=advertisingApps" json:"advertising_apps,omitempty"`
}

func (x *CPromotionPlanning_GetAdvertisingAppsForPartner_Response) Reset() {
	*x = CPromotionPlanning_GetAdvertisingAppsForPartner_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_promotionplanning_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPromotionPlanning_GetAdvertisingAppsForPartner_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPromotionPlanning_GetAdvertisingAppsForPartner_Response) ProtoMessage() {}

func (x *CPromotionPlanning_GetAdvertisingAppsForPartner_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_promotionplanning_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPromotionPlanning_GetAdvertisingAppsForPartner_Response.ProtoReflect.Descriptor instead.
func (*CPromotionPlanning_GetAdvertisingAppsForPartner_Response) Descriptor() ([]byte, []int) {
	return file_service_promotionplanning_proto_rawDescGZIP(), []int{15}
}

func (x *CPromotionPlanning_GetAdvertisingAppsForPartner_Response) GetAdvertisingApps() []*CPromotionPlanning_GetAdvertisingAppsForPartner_ResponseAdvertisingApp {
	if x != nil {
		return x.AdvertisingApps
	}
	return nil
}

type CPromotionPlanning_GetAdvertisingAppsForPartner_ResponseAdvertisingApp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid   *uint32 `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	AppName *string `protobuf:"bytes,2,opt,name=app_name,json=appName" json:"app_name,omitempty"`
	Itemid  *uint32 `protobuf:"varint,3,opt,name=itemid" json:"itemid,omitempty"`
}

func (x *CPromotionPlanning_GetAdvertisingAppsForPartner_ResponseAdvertisingApp) Reset() {
	*x = CPromotionPlanning_GetAdvertisingAppsForPartner_ResponseAdvertisingApp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_promotionplanning_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPromotionPlanning_GetAdvertisingAppsForPartner_ResponseAdvertisingApp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPromotionPlanning_GetAdvertisingAppsForPartner_ResponseAdvertisingApp) ProtoMessage() {}

func (x *CPromotionPlanning_GetAdvertisingAppsForPartner_ResponseAdvertisingApp) ProtoReflect() protoreflect.Message {
	mi := &file_service_promotionplanning_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPromotionPlanning_GetAdvertisingAppsForPartner_ResponseAdvertisingApp.ProtoReflect.Descriptor instead.
func (*CPromotionPlanning_GetAdvertisingAppsForPartner_ResponseAdvertisingApp) Descriptor() ([]byte, []int) {
	return file_service_promotionplanning_proto_rawDescGZIP(), []int{16}
}

func (x *CPromotionPlanning_GetAdvertisingAppsForPartner_ResponseAdvertisingApp) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CPromotionPlanning_GetAdvertisingAppsForPartner_ResponseAdvertisingApp) GetAppName() string {
	if x != nil && x.AppName != nil {
		return *x.AppName
	}
	return ""
}

func (x *CPromotionPlanning_GetAdvertisingAppsForPartner_ResponseAdvertisingApp) GetItemid() uint32 {
	if x != nil && x.Itemid != nil {
		return *x.Itemid
	}
	return 0
}

type CPromotionPlanning_GetAllActivePlan_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CPromotionPlanning_GetAllActivePlan_Request) Reset() {
	*x = CPromotionPlanning_GetAllActivePlan_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_promotionplanning_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPromotionPlanning_GetAllActivePlan_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPromotionPlanning_GetAllActivePlan_Request) ProtoMessage() {}

func (x *CPromotionPlanning_GetAllActivePlan_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_promotionplanning_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPromotionPlanning_GetAllActivePlan_Request.ProtoReflect.Descriptor instead.
func (*CPromotionPlanning_GetAllActivePlan_Request) Descriptor() ([]byte, []int) {
	return file_service_promotionplanning_proto_rawDescGZIP(), []int{17}
}

type CPromotionPlanning_GetAllActivePlan_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plan []*CPromotionPlan `protobuf:"bytes,1,rep,name=plan" json:"plan,omitempty"`
}

func (x *CPromotionPlanning_GetAllActivePlan_Response) Reset() {
	*x = CPromotionPlanning_GetAllActivePlan_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_promotionplanning_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPromotionPlanning_GetAllActivePlan_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPromotionPlanning_GetAllActivePlan_Response) ProtoMessage() {}

func (x *CPromotionPlanning_GetAllActivePlan_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_promotionplanning_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPromotionPlanning_GetAllActivePlan_Response.ProtoReflect.Descriptor instead.
func (*CPromotionPlanning_GetAllActivePlan_Response) Descriptor() ([]byte, []int) {
	return file_service_promotionplanning_proto_rawDescGZIP(), []int{18}
}

func (x *CPromotionPlanning_GetAllActivePlan_Response) GetPlan() []*CPromotionPlan {
	if x != nil {
		return x.Plan
	}
	return nil
}

type CPromotionPlanning_GetAllPlansForApps_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appids                 []uint32 `protobuf:"varint,1,rep,name=appids" json:"appids,omitempty"`
	ExcludeSales           *bool    `protobuf:"varint,2,opt,name=exclude_sales,json=excludeSales" json:"exclude_sales,omitempty"`
	ExcludeDirectFeaturing *bool    `protobuf:"varint,3,opt,name=exclude_direct_featuring,json=excludeDirectFeaturing" json:"exclude_direct_featuring,omitempty"`
}

func (x *CPromotionPlanning_GetAllPlansForApps_Request) Reset() {
	*x = CPromotionPlanning_GetAllPlansForApps_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_promotionplanning_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPromotionPlanning_GetAllPlansForApps_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPromotionPlanning_GetAllPlansForApps_Request) ProtoMessage() {}

func (x *CPromotionPlanning_GetAllPlansForApps_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_promotionplanning_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPromotionPlanning_GetAllPlansForApps_Request.ProtoReflect.Descriptor instead.
func (*CPromotionPlanning_GetAllPlansForApps_Request) Descriptor() ([]byte, []int) {
	return file_service_promotionplanning_proto_rawDescGZIP(), []int{19}
}

func (x *CPromotionPlanning_GetAllPlansForApps_Request) GetAppids() []uint32 {
	if x != nil {
		return x.Appids
	}
	return nil
}

func (x *CPromotionPlanning_GetAllPlansForApps_Request) GetExcludeSales() bool {
	if x != nil && x.ExcludeSales != nil {
		return *x.ExcludeSales
	}
	return false
}

func (x *CPromotionPlanning_GetAllPlansForApps_Request) GetExcludeDirectFeaturing() bool {
	if x != nil && x.ExcludeDirectFeaturing != nil {
		return *x.ExcludeDirectFeaturing
	}
	return false
}

type CPromotionPlanning_GetAllPlansForApps_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plans               []*CPromotionPlan                                                     `protobuf:"bytes,1,rep,name=plans" json:"plans,omitempty"`
	AppsIncludedInSales []*CPromotionPlanning_GetAllPlansForApps_Response_CAppIncludedInSales `protobuf:"bytes,2,rep,name=apps_included_in_sales,json=appsIncludedInSales" json:"apps_included_in_sales,omitempty"`
}

func (x *CPromotionPlanning_GetAllPlansForApps_Response) Reset() {
	*x = CPromotionPlanning_GetAllPlansForApps_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_promotionplanning_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPromotionPlanning_GetAllPlansForApps_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPromotionPlanning_GetAllPlansForApps_Response) ProtoMessage() {}

func (x *CPromotionPlanning_GetAllPlansForApps_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_promotionplanning_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPromotionPlanning_GetAllPlansForApps_Response.ProtoReflect.Descriptor instead.
func (*CPromotionPlanning_GetAllPlansForApps_Response) Descriptor() ([]byte, []int) {
	return file_service_promotionplanning_proto_rawDescGZIP(), []int{20}
}

func (x *CPromotionPlanning_GetAllPlansForApps_Response) GetPlans() []*CPromotionPlan {
	if x != nil {
		return x.Plans
	}
	return nil
}

func (x *CPromotionPlanning_GetAllPlansForApps_Response) GetAppsIncludedInSales() []*CPromotionPlanning_GetAllPlansForApps_Response_CAppIncludedInSales {
	if x != nil {
		return x.AppsIncludedInSales
	}
	return nil
}

type CPromotionPlanning_GetAllPlansForApps_Response_CAppIncludedInSales struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appids       []uint32 `protobuf:"varint,1,rep,name=appids" json:"appids,omitempty"`
	ClanEventGid *uint64  `protobuf:"fixed64,2,opt,name=clan_event_gid,json=clanEventGid" json:"clan_event_gid,omitempty"`
}

func (x *CPromotionPlanning_GetAllPlansForApps_Response_CAppIncludedInSales) Reset() {
	*x = CPromotionPlanning_GetAllPlansForApps_Response_CAppIncludedInSales{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_promotionplanning_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPromotionPlanning_GetAllPlansForApps_Response_CAppIncludedInSales) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPromotionPlanning_GetAllPlansForApps_Response_CAppIncludedInSales) ProtoMessage() {}

func (x *CPromotionPlanning_GetAllPlansForApps_Response_CAppIncludedInSales) ProtoReflect() protoreflect.Message {
	mi := &file_service_promotionplanning_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPromotionPlanning_GetAllPlansForApps_Response_CAppIncludedInSales.ProtoReflect.Descriptor instead.
func (*CPromotionPlanning_GetAllPlansForApps_Response_CAppIncludedInSales) Descriptor() ([]byte, []int) {
	return file_service_promotionplanning_proto_rawDescGZIP(), []int{21}
}

func (x *CPromotionPlanning_GetAllPlansForApps_Response_CAppIncludedInSales) GetAppids() []uint32 {
	if x != nil {
		return x.Appids
	}
	return nil
}

func (x *CPromotionPlanning_GetAllPlansForApps_Response_CAppIncludedInSales) GetClanEventGid() uint64 {
	if x != nil && x.ClanEventGid != nil {
		return *x.ClanEventGid
	}
	return 0
}

type CPromotionPlanning_GetAllPlansForPartner_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Partnerid  *uint32 `protobuf:"varint,1,opt,name=partnerid" json:"partnerid,omitempty"`
	ShowHidden *bool   `protobuf:"varint,4,opt,name=show_hidden,json=showHidden" json:"show_hidden,omitempty"`
	StartDate  *uint32 `protobuf:"varint,5,opt,name=start_date,json=startDate" json:"start_date,omitempty"`
	EndDate    *uint32 `protobuf:"varint,6,opt,name=end_date,json=endDate" json:"end_date,omitempty"`
}

func (x *CPromotionPlanning_GetAllPlansForPartner_Request) Reset() {
	*x = CPromotionPlanning_GetAllPlansForPartner_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_promotionplanning_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPromotionPlanning_GetAllPlansForPartner_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPromotionPlanning_GetAllPlansForPartner_Request) ProtoMessage() {}

func (x *CPromotionPlanning_GetAllPlansForPartner_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_promotionplanning_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPromotionPlanning_GetAllPlansForPartner_Request.ProtoReflect.Descriptor instead.
func (*CPromotionPlanning_GetAllPlansForPartner_Request) Descriptor() ([]byte, []int) {
	return file_service_promotionplanning_proto_rawDescGZIP(), []int{22}
}

func (x *CPromotionPlanning_GetAllPlansForPartner_Request) GetPartnerid() uint32 {
	if x != nil && x.Partnerid != nil {
		return *x.Partnerid
	}
	return 0
}

func (x *CPromotionPlanning_GetAllPlansForPartner_Request) GetShowHidden() bool {
	if x != nil && x.ShowHidden != nil {
		return *x.ShowHidden
	}
	return false
}

func (x *CPromotionPlanning_GetAllPlansForPartner_Request) GetStartDate() uint32 {
	if x != nil && x.StartDate != nil {
		return *x.StartDate
	}
	return 0
}

func (x *CPromotionPlanning_GetAllPlansForPartner_Request) GetEndDate() uint32 {
	if x != nil && x.EndDate != nil {
		return *x.EndDate
	}
	return 0
}

type CPromotionPlanning_GetAllPlansForPartner_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plans []*CPromotionPlan `protobuf:"bytes,1,rep,name=plans" json:"plans,omitempty"`
}

func (x *CPromotionPlanning_GetAllPlansForPartner_Response) Reset() {
	*x = CPromotionPlanning_GetAllPlansForPartner_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_promotionplanning_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPromotionPlanning_GetAllPlansForPartner_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPromotionPlanning_GetAllPlansForPartner_Response) ProtoMessage() {}

func (x *CPromotionPlanning_GetAllPlansForPartner_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_promotionplanning_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPromotionPlanning_GetAllPlansForPartner_Response.ProtoReflect.Descriptor instead.
func (*CPromotionPlanning_GetAllPlansForPartner_Response) Descriptor() ([]byte, []int) {
	return file_service_promotionplanning_proto_rawDescGZIP(), []int{23}
}

func (x *CPromotionPlanning_GetAllPlansForPartner_Response) GetPlans() []*CPromotionPlan {
	if x != nil {
		return x.Plans
	}
	return nil
}

type CPromotionPlanning_GetAvailableWeekSlots_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Publisherid *uint32 `protobuf:"varint,1,opt,name=publisherid" json:"publisherid,omitempty"`
	RtimeStart  *uint32 `protobuf:"varint,2,opt,name=rtime_start,json=rtimeStart" json:"rtime_start,omitempty"`
}

func (x *CPromotionPlanning_GetAvailableWeekSlots_Request) Reset() {
	*x = CPromotionPlanning_GetAvailableWeekSlots_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_promotionplanning_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPromotionPlanning_GetAvailableWeekSlots_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPromotionPlanning_GetAvailableWeekSlots_Request) ProtoMessage() {}

func (x *CPromotionPlanning_GetAvailableWeekSlots_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_promotionplanning_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPromotionPlanning_GetAvailableWeekSlots_Request.ProtoReflect.Descriptor instead.
func (*CPromotionPlanning_GetAvailableWeekSlots_Request) Descriptor() ([]byte, []int) {
	return file_service_promotionplanning_proto_rawDescGZIP(), []int{24}
}

func (x *CPromotionPlanning_GetAvailableWeekSlots_Request) GetPublisherid() uint32 {
	if x != nil && x.Publisherid != nil {
		return *x.Publisherid
	}
	return 0
}

func (x *CPromotionPlanning_GetAvailableWeekSlots_Request) GetRtimeStart() uint32 {
	if x != nil && x.RtimeStart != nil {
		return *x.RtimeStart
	}
	return 0
}

type CPromotionPlanning_GetAvailableWeekSlots_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RtWeeklongDeals []uint32 `protobuf:"varint,1,rep,name=rt_weeklong_deals,json=rtWeeklongDeals" json:"rt_weeklong_deals,omitempty"`
	RtWeekendDeals  []uint32 `protobuf:"varint,2,rep,name=rt_weekend_deals,json=rtWeekendDeals" json:"rt_weekend_deals,omitempty"`
}

func (x *CPromotionPlanning_GetAvailableWeekSlots_Response) Reset() {
	*x = CPromotionPlanning_GetAvailableWeekSlots_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_promotionplanning_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPromotionPlanning_GetAvailableWeekSlots_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPromotionPlanning_GetAvailableWeekSlots_Response) ProtoMessage() {}

func (x *CPromotionPlanning_GetAvailableWeekSlots_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_promotionplanning_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPromotionPlanning_GetAvailableWeekSlots_Response.ProtoReflect.Descriptor instead.
func (*CPromotionPlanning_GetAvailableWeekSlots_Response) Descriptor() ([]byte, []int) {
	return file_service_promotionplanning_proto_rawDescGZIP(), []int{25}
}

func (x *CPromotionPlanning_GetAvailableWeekSlots_Response) GetRtWeeklongDeals() []uint32 {
	if x != nil {
		return x.RtWeeklongDeals
	}
	return nil
}

func (x *CPromotionPlanning_GetAvailableWeekSlots_Response) GetRtWeekendDeals() []uint32 {
	if x != nil {
		return x.RtWeekendDeals
	}
	return nil
}

type CPromotionPlanning_GetPlan_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PromotionId *uint64 `protobuf:"fixed64,1,opt,name=promotion_id,json=promotionId" json:"promotion_id,omitempty"`
}

func (x *CPromotionPlanning_GetPlan_Request) Reset() {
	*x = CPromotionPlanning_GetPlan_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_promotionplanning_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPromotionPlanning_GetPlan_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPromotionPlanning_GetPlan_Request) ProtoMessage() {}

func (x *CPromotionPlanning_GetPlan_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_promotionplanning_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPromotionPlanning_GetPlan_Request.ProtoReflect.Descriptor instead.
func (*CPromotionPlanning_GetPlan_Request) Descriptor() ([]byte, []int) {
	return file_service_promotionplanning_proto_rawDescGZIP(), []int{26}
}

func (x *CPromotionPlanning_GetPlan_Request) GetPromotionId() uint64 {
	if x != nil && x.PromotionId != nil {
		return *x.PromotionId
	}
	return 0
}

type CPromotionPlanning_GetPlan_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plan *CPromotionPlan `protobuf:"bytes,1,opt,name=plan" json:"plan,omitempty"`
}

func (x *CPromotionPlanning_GetPlan_Response) Reset() {
	*x = CPromotionPlanning_GetPlan_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_promotionplanning_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPromotionPlanning_GetPlan_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPromotionPlanning_GetPlan_Response) ProtoMessage() {}

func (x *CPromotionPlanning_GetPlan_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_promotionplanning_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPromotionPlanning_GetPlan_Response.ProtoReflect.Descriptor instead.
func (*CPromotionPlanning_GetPlan_Response) Descriptor() ([]byte, []int) {
	return file_service_promotionplanning_proto_rawDescGZIP(), []int{27}
}

func (x *CPromotionPlanning_GetPlan_Response) GetPlan() *CPromotionPlan {
	if x != nil {
		return x.Plan
	}
	return nil
}

type CPromotionPlanning_GetPlanByInputAccessKey_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InputAccessKey *string `protobuf:"bytes,1,opt,name=input_access_key,json=inputAccessKey" json:"input_access_key,omitempty"`
}

func (x *CPromotionPlanning_GetPlanByInputAccessKey_Request) Reset() {
	*x = CPromotionPlanning_GetPlanByInputAccessKey_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_promotionplanning_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPromotionPlanning_GetPlanByInputAccessKey_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPromotionPlanning_GetPlanByInputAccessKey_Request) ProtoMessage() {}

func (x *CPromotionPlanning_GetPlanByInputAccessKey_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_promotionplanning_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPromotionPlanning_GetPlanByInputAccessKey_Request.ProtoReflect.Descriptor instead.
func (*CPromotionPlanning_GetPlanByInputAccessKey_Request) Descriptor() ([]byte, []int) {
	return file_service_promotionplanning_proto_rawDescGZIP(), []int{28}
}

func (x *CPromotionPlanning_GetPlanByInputAccessKey_Request) GetInputAccessKey() string {
	if x != nil && x.InputAccessKey != nil {
		return *x.InputAccessKey
	}
	return ""
}

type CPromotionPlanning_GetPlanByInputAccessKey_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plan *CPromotionPlan `protobuf:"bytes,1,opt,name=plan" json:"plan,omitempty"`
}

func (x *CPromotionPlanning_GetPlanByInputAccessKey_Response) Reset() {
	*x = CPromotionPlanning_GetPlanByInputAccessKey_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_promotionplanning_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPromotionPlanning_GetPlanByInputAccessKey_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPromotionPlanning_GetPlanByInputAccessKey_Response) ProtoMessage() {}

func (x *CPromotionPlanning_GetPlanByInputAccessKey_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_promotionplanning_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPromotionPlanning_GetPlanByInputAccessKey_Response.ProtoReflect.Descriptor instead.
func (*CPromotionPlanning_GetPlanByInputAccessKey_Response) Descriptor() ([]byte, []int) {
	return file_service_promotionplanning_proto_rawDescGZIP(), []int{29}
}

func (x *CPromotionPlanning_GetPlanByInputAccessKey_Response) GetPlan() *CPromotionPlan {
	if x != nil {
		return x.Plan
	}
	return nil
}

type CPromotionPlanning_GetPlanCompletedInDateRange_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OldestRtime    *uint32  `protobuf:"varint,1,opt,name=oldest_rtime,json=oldestRtime" json:"oldest_rtime,omitempty"`
	NewestRtime    *uint32  `protobuf:"varint,2,opt,name=newest_rtime,json=newestRtime" json:"newest_rtime,omitempty"`
	PromotionTypes []string `protobuf:"bytes,3,rep,name=promotion_types,json=promotionTypes" json:"promotion_types,omitempty"`
}

func (x *CPromotionPlanning_GetPlanCompletedInDateRange_Request) Reset() {
	*x = CPromotionPlanning_GetPlanCompletedInDateRange_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_promotionplanning_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPromotionPlanning_GetPlanCompletedInDateRange_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPromotionPlanning_GetPlanCompletedInDateRange_Request) ProtoMessage() {}

func (x *CPromotionPlanning_GetPlanCompletedInDateRange_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_promotionplanning_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPromotionPlanning_GetPlanCompletedInDateRange_Request.ProtoReflect.Descriptor instead.
func (*CPromotionPlanning_GetPlanCompletedInDateRange_Request) Descriptor() ([]byte, []int) {
	return file_service_promotionplanning_proto_rawDescGZIP(), []int{30}
}

func (x *CPromotionPlanning_GetPlanCompletedInDateRange_Request) GetOldestRtime() uint32 {
	if x != nil && x.OldestRtime != nil {
		return *x.OldestRtime
	}
	return 0
}

func (x *CPromotionPlanning_GetPlanCompletedInDateRange_Request) GetNewestRtime() uint32 {
	if x != nil && x.NewestRtime != nil {
		return *x.NewestRtime
	}
	return 0
}

func (x *CPromotionPlanning_GetPlanCompletedInDateRange_Request) GetPromotionTypes() []string {
	if x != nil {
		return x.PromotionTypes
	}
	return nil
}

type CPromotionPlanning_GetPlanCompletedInDateRange_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plans []*CPromotionPlan `protobuf:"bytes,1,rep,name=plans" json:"plans,omitempty"`
}

func (x *CPromotionPlanning_GetPlanCompletedInDateRange_Response) Reset() {
	*x = CPromotionPlanning_GetPlanCompletedInDateRange_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_promotionplanning_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPromotionPlanning_GetPlanCompletedInDateRange_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPromotionPlanning_GetPlanCompletedInDateRange_Response) ProtoMessage() {}

func (x *CPromotionPlanning_GetPlanCompletedInDateRange_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_promotionplanning_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPromotionPlanning_GetPlanCompletedInDateRange_Response.ProtoReflect.Descriptor instead.
func (*CPromotionPlanning_GetPlanCompletedInDateRange_Response) Descriptor() ([]byte, []int) {
	return file_service_promotionplanning_proto_rawDescGZIP(), []int{31}
}

func (x *CPromotionPlanning_GetPlanCompletedInDateRange_Response) GetPlans() []*CPromotionPlan {
	if x != nil {
		return x.Plans
	}
	return nil
}

type CPromotionPlanning_GetPlansUpdatedSince_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rtime     *uint32 `protobuf:"varint,1,opt,name=rtime" json:"rtime,omitempty"`
	UptoRtime *uint32 `protobuf:"varint,2,opt,name=upto_rtime,json=uptoRtime" json:"upto_rtime,omitempty"`
}

func (x *CPromotionPlanning_GetPlansUpdatedSince_Request) Reset() {
	*x = CPromotionPlanning_GetPlansUpdatedSince_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_promotionplanning_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPromotionPlanning_GetPlansUpdatedSince_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPromotionPlanning_GetPlansUpdatedSince_Request) ProtoMessage() {}

func (x *CPromotionPlanning_GetPlansUpdatedSince_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_promotionplanning_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPromotionPlanning_GetPlansUpdatedSince_Request.ProtoReflect.Descriptor instead.
func (*CPromotionPlanning_GetPlansUpdatedSince_Request) Descriptor() ([]byte, []int) {
	return file_service_promotionplanning_proto_rawDescGZIP(), []int{32}
}

func (x *CPromotionPlanning_GetPlansUpdatedSince_Request) GetRtime() uint32 {
	if x != nil && x.Rtime != nil {
		return *x.Rtime
	}
	return 0
}

func (x *CPromotionPlanning_GetPlansUpdatedSince_Request) GetUptoRtime() uint32 {
	if x != nil && x.UptoRtime != nil {
		return *x.UptoRtime
	}
	return 0
}

type CPromotionPlanning_GetPlansUpdatedSince_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plans          []*CPromotionPlan `protobuf:"bytes,1,rep,name=plans" json:"plans,omitempty"`
	DeletedPlanIds []uint64          `protobuf:"fixed64,2,rep,name=deleted_plan_ids,json=deletedPlanIds" json:"deleted_plan_ids,omitempty"`
}

func (x *CPromotionPlanning_GetPlansUpdatedSince_Response) Reset() {
	*x = CPromotionPlanning_GetPlansUpdatedSince_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_promotionplanning_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPromotionPlanning_GetPlansUpdatedSince_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPromotionPlanning_GetPlansUpdatedSince_Response) ProtoMessage() {}

func (x *CPromotionPlanning_GetPlansUpdatedSince_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_promotionplanning_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPromotionPlanning_GetPlansUpdatedSince_Response.ProtoReflect.Descriptor instead.
func (*CPromotionPlanning_GetPlansUpdatedSince_Response) Descriptor() ([]byte, []int) {
	return file_service_promotionplanning_proto_rawDescGZIP(), []int{33}
}

func (x *CPromotionPlanning_GetPlansUpdatedSince_Response) GetPlans() []*CPromotionPlan {
	if x != nil {
		return x.Plans
	}
	return nil
}

func (x *CPromotionPlanning_GetPlansUpdatedSince_Response) GetDeletedPlanIds() []uint64 {
	if x != nil {
		return x.DeletedPlanIds
	}
	return nil
}

type CPromotionPlanning_GetPromotionPlanForSalePages_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestList []*CPromotionPlanning_GetPromotionPlanForSalePages_Request_CSalePage `protobuf:"bytes,1,rep,name=request_list,json=requestList" json:"request_list,omitempty"`
}

func (x *CPromotionPlanning_GetPromotionPlanForSalePages_Request) Reset() {
	*x = CPromotionPlanning_GetPromotionPlanForSalePages_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_promotionplanning_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPromotionPlanning_GetPromotionPlanForSalePages_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPromotionPlanning_GetPromotionPlanForSalePages_Request) ProtoMessage() {}

func (x *CPromotionPlanning_GetPromotionPlanForSalePages_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_promotionplanning_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPromotionPlanning_GetPromotionPlanForSalePages_Request.ProtoReflect.Descriptor instead.
func (*CPromotionPlanning_GetPromotionPlanForSalePages_Request) Descriptor() ([]byte, []int) {
	return file_service_promotionplanning_proto_rawDescGZIP(), []int{34}
}

func (x *CPromotionPlanning_GetPromotionPlanForSalePages_Request) GetRequestList() []*CPromotionPlanning_GetPromotionPlanForSalePages_Request_CSalePage {
	if x != nil {
		return x.RequestList
	}
	return nil
}

type CPromotionPlanning_GetPromotionPlanForSalePages_Request_CSalePage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClanAccountId *uint32 `protobuf:"varint,1,opt,name=clan_account_id,json=clanAccountId" json:"clan_account_id,omitempty"`
	GidClanEvent  *uint64 `protobuf:"fixed64,2,opt,name=gid_clan_event,json=gidClanEvent" json:"gid_clan_event,omitempty"`
}

func (x *CPromotionPlanning_GetPromotionPlanForSalePages_Request_CSalePage) Reset() {
	*x = CPromotionPlanning_GetPromotionPlanForSalePages_Request_CSalePage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_promotionplanning_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPromotionPlanning_GetPromotionPlanForSalePages_Request_CSalePage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPromotionPlanning_GetPromotionPlanForSalePages_Request_CSalePage) ProtoMessage() {}

func (x *CPromotionPlanning_GetPromotionPlanForSalePages_Request_CSalePage) ProtoReflect() protoreflect.Message {
	mi := &file_service_promotionplanning_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPromotionPlanning_GetPromotionPlanForSalePages_Request_CSalePage.ProtoReflect.Descriptor instead.
func (*CPromotionPlanning_GetPromotionPlanForSalePages_Request_CSalePage) Descriptor() ([]byte, []int) {
	return file_service_promotionplanning_proto_rawDescGZIP(), []int{35}
}

func (x *CPromotionPlanning_GetPromotionPlanForSalePages_Request_CSalePage) GetClanAccountId() uint32 {
	if x != nil && x.ClanAccountId != nil {
		return *x.ClanAccountId
	}
	return 0
}

func (x *CPromotionPlanning_GetPromotionPlanForSalePages_Request_CSalePage) GetGidClanEvent() uint64 {
	if x != nil && x.GidClanEvent != nil {
		return *x.GidClanEvent
	}
	return 0
}

type CPromotionPlanning_GetPromotionPlanForSalePages_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plans []*CPromotionPlan `protobuf:"bytes,1,rep,name=plans" json:"plans,omitempty"`
}

func (x *CPromotionPlanning_GetPromotionPlanForSalePages_Response) Reset() {
	*x = CPromotionPlanning_GetPromotionPlanForSalePages_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_promotionplanning_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPromotionPlanning_GetPromotionPlanForSalePages_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPromotionPlanning_GetPromotionPlanForSalePages_Response) ProtoMessage() {}

func (x *CPromotionPlanning_GetPromotionPlanForSalePages_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_promotionplanning_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPromotionPlanning_GetPromotionPlanForSalePages_Response.ProtoReflect.Descriptor instead.
func (*CPromotionPlanning_GetPromotionPlanForSalePages_Response) Descriptor() ([]byte, []int) {
	return file_service_promotionplanning_proto_rawDescGZIP(), []int{36}
}

func (x *CPromotionPlanning_GetPromotionPlanForSalePages_Response) GetPlans() []*CPromotionPlan {
	if x != nil {
		return x.Plans
	}
	return nil
}

type CPromotionPlanning_GetSalePageCandidatesForPromo_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId        *uint32 `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	IncludePublished *bool   `protobuf:"varint,2,opt,name=include_published,json=includePublished" json:"include_published,omitempty"`
}

func (x *CPromotionPlanning_GetSalePageCandidatesForPromo_Request) Reset() {
	*x = CPromotionPlanning_GetSalePageCandidatesForPromo_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_promotionplanning_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPromotionPlanning_GetSalePageCandidatesForPromo_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPromotionPlanning_GetSalePageCandidatesForPromo_Request) ProtoMessage() {}

func (x *CPromotionPlanning_GetSalePageCandidatesForPromo_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_promotionplanning_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPromotionPlanning_GetSalePageCandidatesForPromo_Request.ProtoReflect.Descriptor instead.
func (*CPromotionPlanning_GetSalePageCandidatesForPromo_Request) Descriptor() ([]byte, []int) {
	return file_service_promotionplanning_proto_rawDescGZIP(), []int{37}
}

func (x *CPromotionPlanning_GetSalePageCandidatesForPromo_Request) GetAccountId() uint32 {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return 0
}

func (x *CPromotionPlanning_GetSalePageCandidatesForPromo_Request) GetIncludePublished() bool {
	if x != nil && x.IncludePublished != nil {
		return *x.IncludePublished
	}
	return false
}

type CPromotionPlanning_GetSalePageCandidatesForPromo_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Clans []*CPromotionPlanning_GetSalePageCandidatesForPromo_ResponseClan `protobuf:"bytes,1,rep,name=clans" json:"clans,omitempty"`
}

func (x *CPromotionPlanning_GetSalePageCandidatesForPromo_Response) Reset() {
	*x = CPromotionPlanning_GetSalePageCandidatesForPromo_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_promotionplanning_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPromotionPlanning_GetSalePageCandidatesForPromo_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPromotionPlanning_GetSalePageCandidatesForPromo_Response) ProtoMessage() {}

func (x *CPromotionPlanning_GetSalePageCandidatesForPromo_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_promotionplanning_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPromotionPlanning_GetSalePageCandidatesForPromo_Response.ProtoReflect.Descriptor instead.
func (*CPromotionPlanning_GetSalePageCandidatesForPromo_Response) Descriptor() ([]byte, []int) {
	return file_service_promotionplanning_proto_rawDescGZIP(), []int{38}
}

func (x *CPromotionPlanning_GetSalePageCandidatesForPromo_Response) GetClans() []*CPromotionPlanning_GetSalePageCandidatesForPromo_ResponseClan {
	if x != nil {
		return x.Clans
	}
	return nil
}

type CPromotionPlanning_GetSalePageCandidatesForPromo_ResponseClan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClanAccountId *uint32                                                              `protobuf:"varint,1,opt,name=clan_account_id,json=clanAccountId" json:"clan_account_id,omitempty"`
	ClanName      *string                                                              `protobuf:"bytes,2,opt,name=clan_name,json=clanName" json:"clan_name,omitempty"`
	IsCreatorHome *bool                                                                `protobuf:"varint,3,opt,name=is_creator_home,json=isCreatorHome" json:"is_creator_home,omitempty"`
	SalePages     []*CPromotionPlanning_GetSalePageCandidatesForPromo_ResponseSalepage `protobuf:"bytes,4,rep,name=sale_pages,json=salePages" json:"sale_pages,omitempty"`
}

func (x *CPromotionPlanning_GetSalePageCandidatesForPromo_ResponseClan) Reset() {
	*x = CPromotionPlanning_GetSalePageCandidatesForPromo_ResponseClan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_promotionplanning_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPromotionPlanning_GetSalePageCandidatesForPromo_ResponseClan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPromotionPlanning_GetSalePageCandidatesForPromo_ResponseClan) ProtoMessage() {}

func (x *CPromotionPlanning_GetSalePageCandidatesForPromo_ResponseClan) ProtoReflect() protoreflect.Message {
	mi := &file_service_promotionplanning_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPromotionPlanning_GetSalePageCandidatesForPromo_ResponseClan.ProtoReflect.Descriptor instead.
func (*CPromotionPlanning_GetSalePageCandidatesForPromo_ResponseClan) Descriptor() ([]byte, []int) {
	return file_service_promotionplanning_proto_rawDescGZIP(), []int{39}
}

func (x *CPromotionPlanning_GetSalePageCandidatesForPromo_ResponseClan) GetClanAccountId() uint32 {
	if x != nil && x.ClanAccountId != nil {
		return *x.ClanAccountId
	}
	return 0
}

func (x *CPromotionPlanning_GetSalePageCandidatesForPromo_ResponseClan) GetClanName() string {
	if x != nil && x.ClanName != nil {
		return *x.ClanName
	}
	return ""
}

func (x *CPromotionPlanning_GetSalePageCandidatesForPromo_ResponseClan) GetIsCreatorHome() bool {
	if x != nil && x.IsCreatorHome != nil {
		return *x.IsCreatorHome
	}
	return false
}

func (x *CPromotionPlanning_GetSalePageCandidatesForPromo_ResponseClan) GetSalePages() []*CPromotionPlanning_GetSalePageCandidatesForPromo_ResponseSalepage {
	if x != nil {
		return x.SalePages
	}
	return nil
}

type CPromotionPlanning_GetSalePageCandidatesForPromo_ResponseSalepage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClanAccountId         *uint32 `protobuf:"varint,1,opt,name=clan_account_id,json=clanAccountId" json:"clan_account_id,omitempty"`
	GidClanEvent          *uint64 `protobuf:"fixed64,2,opt,name=gid_clan_event,json=gidClanEvent" json:"gid_clan_event,omitempty"`
	Name                  *string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Published             *bool   `protobuf:"varint,4,opt,name=published" json:"published,omitempty"`
	StartTime             *uint32 `protobuf:"varint,5,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	EndTime               *uint32 `protobuf:"varint,6,opt,name=end_time,json=endTime" json:"end_time,omitempty"`
	ExternalSaleEventType *uint32 `protobuf:"varint,7,opt,name=external_sale_event_type,json=externalSaleEventType" json:"external_sale_event_type,omitempty"`
}

func (x *CPromotionPlanning_GetSalePageCandidatesForPromo_ResponseSalepage) Reset() {
	*x = CPromotionPlanning_GetSalePageCandidatesForPromo_ResponseSalepage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_promotionplanning_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPromotionPlanning_GetSalePageCandidatesForPromo_ResponseSalepage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPromotionPlanning_GetSalePageCandidatesForPromo_ResponseSalepage) ProtoMessage() {}

func (x *CPromotionPlanning_GetSalePageCandidatesForPromo_ResponseSalepage) ProtoReflect() protoreflect.Message {
	mi := &file_service_promotionplanning_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPromotionPlanning_GetSalePageCandidatesForPromo_ResponseSalepage.ProtoReflect.Descriptor instead.
func (*CPromotionPlanning_GetSalePageCandidatesForPromo_ResponseSalepage) Descriptor() ([]byte, []int) {
	return file_service_promotionplanning_proto_rawDescGZIP(), []int{40}
}

func (x *CPromotionPlanning_GetSalePageCandidatesForPromo_ResponseSalepage) GetClanAccountId() uint32 {
	if x != nil && x.ClanAccountId != nil {
		return *x.ClanAccountId
	}
	return 0
}

func (x *CPromotionPlanning_GetSalePageCandidatesForPromo_ResponseSalepage) GetGidClanEvent() uint64 {
	if x != nil && x.GidClanEvent != nil {
		return *x.GidClanEvent
	}
	return 0
}

func (x *CPromotionPlanning_GetSalePageCandidatesForPromo_ResponseSalepage) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CPromotionPlanning_GetSalePageCandidatesForPromo_ResponseSalepage) GetPublished() bool {
	if x != nil && x.Published != nil {
		return *x.Published
	}
	return false
}

func (x *CPromotionPlanning_GetSalePageCandidatesForPromo_ResponseSalepage) GetStartTime() uint32 {
	if x != nil && x.StartTime != nil {
		return *x.StartTime
	}
	return 0
}

func (x *CPromotionPlanning_GetSalePageCandidatesForPromo_ResponseSalepage) GetEndTime() uint32 {
	if x != nil && x.EndTime != nil {
		return *x.EndTime
	}
	return 0
}

func (x *CPromotionPlanning_GetSalePageCandidatesForPromo_ResponseSalepage) GetExternalSaleEventType() uint32 {
	if x != nil && x.ExternalSaleEventType != nil {
		return *x.ExternalSaleEventType
	}
	return 0
}

type CPromotionPlanning_GetSentNotification_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PromotionId    *uint64 `protobuf:"fixed64,1,opt,name=promotion_id,json=promotionId" json:"promotion_id,omitempty"`
	NotificationId *uint64 `protobuf:"fixed64,2,opt,name=notification_id,json=notificationId" json:"notification_id,omitempty"`
}

func (x *CPromotionPlanning_GetSentNotification_Request) Reset() {
	*x = CPromotionPlanning_GetSentNotification_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_promotionplanning_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPromotionPlanning_GetSentNotification_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPromotionPlanning_GetSentNotification_Request) ProtoMessage() {}

func (x *CPromotionPlanning_GetSentNotification_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_promotionplanning_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPromotionPlanning_GetSentNotification_Request.ProtoReflect.Descriptor instead.
func (*CPromotionPlanning_GetSentNotification_Request) Descriptor() ([]byte, []int) {
	return file_service_promotionplanning_proto_rawDescGZIP(), []int{41}
}

func (x *CPromotionPlanning_GetSentNotification_Request) GetPromotionId() uint64 {
	if x != nil && x.PromotionId != nil {
		return *x.PromotionId
	}
	return 0
}

func (x *CPromotionPlanning_GetSentNotification_Request) GetNotificationId() uint64 {
	if x != nil && x.NotificationId != nil {
		return *x.NotificationId
	}
	return 0
}

type CPromotionPlanning_GetSentNotification_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*CPromotionNotificationResults `protobuf:"bytes,1,rep,name=results" json:"results,omitempty"`
}

func (x *CPromotionPlanning_GetSentNotification_Response) Reset() {
	*x = CPromotionPlanning_GetSentNotification_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_promotionplanning_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPromotionPlanning_GetSentNotification_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPromotionPlanning_GetSentNotification_Response) ProtoMessage() {}

func (x *CPromotionPlanning_GetSentNotification_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_promotionplanning_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPromotionPlanning_GetSentNotification_Response.ProtoReflect.Descriptor instead.
func (*CPromotionPlanning_GetSentNotification_Response) Descriptor() ([]byte, []int) {
	return file_service_promotionplanning_proto_rawDescGZIP(), []int{42}
}

func (x *CPromotionPlanning_GetSentNotification_Response) GetResults() []*CPromotionNotificationResults {
	if x != nil {
		return x.Results
	}
	return nil
}

type CPromotionPlanning_GetUpcomingScheduledDiscounts_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rtstart                 *uint32 `protobuf:"varint,1,opt,name=rtstart" json:"rtstart,omitempty"`
	Rtend                   *uint32 `protobuf:"varint,2,opt,name=rtend" json:"rtend,omitempty"`
	IncludePackages         *bool   `protobuf:"varint,3,opt,name=include_packages,json=includePackages" json:"include_packages,omitempty"`
	FilterModifiedSalesRank *bool   `protobuf:"varint,4,opt,name=filter_modified_sales_rank,json=filterModifiedSalesRank,def=1" json:"filter_modified_sales_rank,omitempty"`
}

// Default values for CPromotionPlanning_GetUpcomingScheduledDiscounts_Request fields.
const (
	Default_CPromotionPlanning_GetUpcomingScheduledDiscounts_Request_FilterModifiedSalesRank = bool(true)
)

func (x *CPromotionPlanning_GetUpcomingScheduledDiscounts_Request) Reset() {
	*x = CPromotionPlanning_GetUpcomingScheduledDiscounts_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_promotionplanning_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPromotionPlanning_GetUpcomingScheduledDiscounts_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPromotionPlanning_GetUpcomingScheduledDiscounts_Request) ProtoMessage() {}

func (x *CPromotionPlanning_GetUpcomingScheduledDiscounts_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_promotionplanning_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPromotionPlanning_GetUpcomingScheduledDiscounts_Request.ProtoReflect.Descriptor instead.
func (*CPromotionPlanning_GetUpcomingScheduledDiscounts_Request) Descriptor() ([]byte, []int) {
	return file_service_promotionplanning_proto_rawDescGZIP(), []int{43}
}

func (x *CPromotionPlanning_GetUpcomingScheduledDiscounts_Request) GetRtstart() uint32 {
	if x != nil && x.Rtstart != nil {
		return *x.Rtstart
	}
	return 0
}

func (x *CPromotionPlanning_GetUpcomingScheduledDiscounts_Request) GetRtend() uint32 {
	if x != nil && x.Rtend != nil {
		return *x.Rtend
	}
	return 0
}

func (x *CPromotionPlanning_GetUpcomingScheduledDiscounts_Request) GetIncludePackages() bool {
	if x != nil && x.IncludePackages != nil {
		return *x.IncludePackages
	}
	return false
}

func (x *CPromotionPlanning_GetUpcomingScheduledDiscounts_Request) GetFilterModifiedSalesRank() bool {
	if x != nil && x.FilterModifiedSalesRank != nil {
		return *x.FilterModifiedSalesRank
	}
	return Default_CPromotionPlanning_GetUpcomingScheduledDiscounts_Request_FilterModifiedSalesRank
}

type CPromotionPlanning_GetUpcomingScheduledDiscounts_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PackageDetails []*CPromotionPlanning_GetUpcomingScheduledDiscounts_Response_CUpcomingPackageDiscountInfo `protobuf:"bytes,1,rep,name=package_details,json=packageDetails" json:"package_details,omitempty"`
	AppDetails     []*CPromotionPlanning_GetUpcomingScheduledDiscounts_Response_CUpcomingAppDiscountInfo     `protobuf:"bytes,2,rep,name=app_details,json=appDetails" json:"app_details,omitempty"`
}

func (x *CPromotionPlanning_GetUpcomingScheduledDiscounts_Response) Reset() {
	*x = CPromotionPlanning_GetUpcomingScheduledDiscounts_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_promotionplanning_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPromotionPlanning_GetUpcomingScheduledDiscounts_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPromotionPlanning_GetUpcomingScheduledDiscounts_Response) ProtoMessage() {}

func (x *CPromotionPlanning_GetUpcomingScheduledDiscounts_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_promotionplanning_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPromotionPlanning_GetUpcomingScheduledDiscounts_Response.ProtoReflect.Descriptor instead.
func (*CPromotionPlanning_GetUpcomingScheduledDiscounts_Response) Descriptor() ([]byte, []int) {
	return file_service_promotionplanning_proto_rawDescGZIP(), []int{44}
}

func (x *CPromotionPlanning_GetUpcomingScheduledDiscounts_Response) GetPackageDetails() []*CPromotionPlanning_GetUpcomingScheduledDiscounts_Response_CUpcomingPackageDiscountInfo {
	if x != nil {
		return x.PackageDetails
	}
	return nil
}

func (x *CPromotionPlanning_GetUpcomingScheduledDiscounts_Response) GetAppDetails() []*CPromotionPlanning_GetUpcomingScheduledDiscounts_Response_CUpcomingAppDiscountInfo {
	if x != nil {
		return x.AppDetails
	}
	return nil
}

type CPromotionPlanning_GetUpcomingScheduledDiscounts_Response_CUpcomingAppDiscountInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid                   *uint32 `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	CheapestPackageId       *uint32 `protobuf:"varint,3,opt,name=cheapest_package_id,json=cheapestPackageId" json:"cheapest_package_id,omitempty"`
	CheapestDiscountId      *uint32 `protobuf:"varint,4,opt,name=cheapest_discount_id,json=cheapestDiscountId" json:"cheapest_discount_id,omitempty"`
	CheapestDiscountName    *string `protobuf:"bytes,5,opt,name=cheapest_discount_name,json=cheapestDiscountName" json:"cheapest_discount_name,omitempty"`
	PackageOriginalPriceUsd *uint32 `protobuf:"varint,6,opt,name=package_original_price_usd,json=packageOriginalPriceUsd" json:"package_original_price_usd,omitempty"`
	DiscountedPriceUsd      *uint32 `protobuf:"varint,7,opt,name=discounted_price_usd,json=discountedPriceUsd" json:"discounted_price_usd,omitempty"`
	DiscountPercentage      *uint32 `protobuf:"varint,8,opt,name=discount_percentage,json=discountPercentage" json:"discount_percentage,omitempty"`
	RtimeDiscountStart      *uint32 `protobuf:"varint,9,opt,name=rtime_discount_start,json=rtimeDiscountStart" json:"rtime_discount_start,omitempty"`
	RtimeDiscountEnd        *uint32 `protobuf:"varint,10,opt,name=rtime_discount_end,json=rtimeDiscountEnd" json:"rtime_discount_end,omitempty"`
	NumDiscountedPackages   *uint32 `protobuf:"varint,11,opt,name=num_discounted_packages,json=numDiscountedPackages" json:"num_discounted_packages,omitempty"`
	ModifiedSalesRank       *uint32 `protobuf:"varint,12,opt,name=modified_sales_rank,json=modifiedSalesRank" json:"modified_sales_rank,omitempty"`
}

func (x *CPromotionPlanning_GetUpcomingScheduledDiscounts_Response_CUpcomingAppDiscountInfo) Reset() {
	*x = CPromotionPlanning_GetUpcomingScheduledDiscounts_Response_CUpcomingAppDiscountInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_promotionplanning_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPromotionPlanning_GetUpcomingScheduledDiscounts_Response_CUpcomingAppDiscountInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPromotionPlanning_GetUpcomingScheduledDiscounts_Response_CUpcomingAppDiscountInfo) ProtoMessage() {
}

func (x *CPromotionPlanning_GetUpcomingScheduledDiscounts_Response_CUpcomingAppDiscountInfo) ProtoReflect() protoreflect.Message {
	mi := &file_service_promotionplanning_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPromotionPlanning_GetUpcomingScheduledDiscounts_Response_CUpcomingAppDiscountInfo.ProtoReflect.Descriptor instead.
func (*CPromotionPlanning_GetUpcomingScheduledDiscounts_Response_CUpcomingAppDiscountInfo) Descriptor() ([]byte, []int) {
	return file_service_promotionplanning_proto_rawDescGZIP(), []int{45}
}

func (x *CPromotionPlanning_GetUpcomingScheduledDiscounts_Response_CUpcomingAppDiscountInfo) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CPromotionPlanning_GetUpcomingScheduledDiscounts_Response_CUpcomingAppDiscountInfo) GetCheapestPackageId() uint32 {
	if x != nil && x.CheapestPackageId != nil {
		return *x.CheapestPackageId
	}
	return 0
}

func (x *CPromotionPlanning_GetUpcomingScheduledDiscounts_Response_CUpcomingAppDiscountInfo) GetCheapestDiscountId() uint32 {
	if x != nil && x.CheapestDiscountId != nil {
		return *x.CheapestDiscountId
	}
	return 0
}

func (x *CPromotionPlanning_GetUpcomingScheduledDiscounts_Response_CUpcomingAppDiscountInfo) GetCheapestDiscountName() string {
	if x != nil && x.CheapestDiscountName != nil {
		return *x.CheapestDiscountName
	}
	return ""
}

func (x *CPromotionPlanning_GetUpcomingScheduledDiscounts_Response_CUpcomingAppDiscountInfo) GetPackageOriginalPriceUsd() uint32 {
	if x != nil && x.PackageOriginalPriceUsd != nil {
		return *x.PackageOriginalPriceUsd
	}
	return 0
}

func (x *CPromotionPlanning_GetUpcomingScheduledDiscounts_Response_CUpcomingAppDiscountInfo) GetDiscountedPriceUsd() uint32 {
	if x != nil && x.DiscountedPriceUsd != nil {
		return *x.DiscountedPriceUsd
	}
	return 0
}

func (x *CPromotionPlanning_GetUpcomingScheduledDiscounts_Response_CUpcomingAppDiscountInfo) GetDiscountPercentage() uint32 {
	if x != nil && x.DiscountPercentage != nil {
		return *x.DiscountPercentage
	}
	return 0
}

func (x *CPromotionPlanning_GetUpcomingScheduledDiscounts_Response_CUpcomingAppDiscountInfo) GetRtimeDiscountStart() uint32 {
	if x != nil && x.RtimeDiscountStart != nil {
		return *x.RtimeDiscountStart
	}
	return 0
}

func (x *CPromotionPlanning_GetUpcomingScheduledDiscounts_Response_CUpcomingAppDiscountInfo) GetRtimeDiscountEnd() uint32 {
	if x != nil && x.RtimeDiscountEnd != nil {
		return *x.RtimeDiscountEnd
	}
	return 0
}

func (x *CPromotionPlanning_GetUpcomingScheduledDiscounts_Response_CUpcomingAppDiscountInfo) GetNumDiscountedPackages() uint32 {
	if x != nil && x.NumDiscountedPackages != nil {
		return *x.NumDiscountedPackages
	}
	return 0
}

func (x *CPromotionPlanning_GetUpcomingScheduledDiscounts_Response_CUpcomingAppDiscountInfo) GetModifiedSalesRank() uint32 {
	if x != nil && x.ModifiedSalesRank != nil {
		return *x.ModifiedSalesRank
	}
	return 0
}

type CPromotionPlanning_GetUpcomingScheduledDiscounts_Response_CUpcomingPackageDiscountInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PackageId          *uint32 `protobuf:"varint,1,opt,name=package_id,json=packageId" json:"package_id,omitempty"`
	DiscountId         *uint32 `protobuf:"varint,2,opt,name=discount_id,json=discountId" json:"discount_id,omitempty"`
	DiscountName       *string `protobuf:"bytes,3,opt,name=discount_name,json=discountName" json:"discount_name,omitempty"`
	DiscountPercentage *uint32 `protobuf:"varint,4,opt,name=discount_percentage,json=discountPercentage" json:"discount_percentage,omitempty"`
	OriginalPriceUsd   *uint32 `protobuf:"varint,5,opt,name=original_price_usd,json=originalPriceUsd" json:"original_price_usd,omitempty"`
	DiscountPriceUsd   *uint32 `protobuf:"varint,6,opt,name=discount_price_usd,json=discountPriceUsd" json:"discount_price_usd,omitempty"`
	RtimeDiscountStart *uint32 `protobuf:"varint,7,opt,name=rtime_discount_start,json=rtimeDiscountStart" json:"rtime_discount_start,omitempty"`
	RtimeDiscountEnd   *uint32 `protobuf:"varint,8,opt,name=rtime_discount_end,json=rtimeDiscountEnd" json:"rtime_discount_end,omitempty"`
}

func (x *CPromotionPlanning_GetUpcomingScheduledDiscounts_Response_CUpcomingPackageDiscountInfo) Reset() {
	*x = CPromotionPlanning_GetUpcomingScheduledDiscounts_Response_CUpcomingPackageDiscountInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_promotionplanning_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPromotionPlanning_GetUpcomingScheduledDiscounts_Response_CUpcomingPackageDiscountInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPromotionPlanning_GetUpcomingScheduledDiscounts_Response_CUpcomingPackageDiscountInfo) ProtoMessage() {
}

func (x *CPromotionPlanning_GetUpcomingScheduledDiscounts_Response_CUpcomingPackageDiscountInfo) ProtoReflect() protoreflect.Message {
	mi := &file_service_promotionplanning_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPromotionPlanning_GetUpcomingScheduledDiscounts_Response_CUpcomingPackageDiscountInfo.ProtoReflect.Descriptor instead.
func (*CPromotionPlanning_GetUpcomingScheduledDiscounts_Response_CUpcomingPackageDiscountInfo) Descriptor() ([]byte, []int) {
	return file_service_promotionplanning_proto_rawDescGZIP(), []int{46}
}

func (x *CPromotionPlanning_GetUpcomingScheduledDiscounts_Response_CUpcomingPackageDiscountInfo) GetPackageId() uint32 {
	if x != nil && x.PackageId != nil {
		return *x.PackageId
	}
	return 0
}

func (x *CPromotionPlanning_GetUpcomingScheduledDiscounts_Response_CUpcomingPackageDiscountInfo) GetDiscountId() uint32 {
	if x != nil && x.DiscountId != nil {
		return *x.DiscountId
	}
	return 0
}

func (x *CPromotionPlanning_GetUpcomingScheduledDiscounts_Response_CUpcomingPackageDiscountInfo) GetDiscountName() string {
	if x != nil && x.DiscountName != nil {
		return *x.DiscountName
	}
	return ""
}

func (x *CPromotionPlanning_GetUpcomingScheduledDiscounts_Response_CUpcomingPackageDiscountInfo) GetDiscountPercentage() uint32 {
	if x != nil && x.DiscountPercentage != nil {
		return *x.DiscountPercentage
	}
	return 0
}

func (x *CPromotionPlanning_GetUpcomingScheduledDiscounts_Response_CUpcomingPackageDiscountInfo) GetOriginalPriceUsd() uint32 {
	if x != nil && x.OriginalPriceUsd != nil {
		return *x.OriginalPriceUsd
	}
	return 0
}

func (x *CPromotionPlanning_GetUpcomingScheduledDiscounts_Response_CUpcomingPackageDiscountInfo) GetDiscountPriceUsd() uint32 {
	if x != nil && x.DiscountPriceUsd != nil {
		return *x.DiscountPriceUsd
	}
	return 0
}

func (x *CPromotionPlanning_GetUpcomingScheduledDiscounts_Response_CUpcomingPackageDiscountInfo) GetRtimeDiscountStart() uint32 {
	if x != nil && x.RtimeDiscountStart != nil {
		return *x.RtimeDiscountStart
	}
	return 0
}

func (x *CPromotionPlanning_GetUpcomingScheduledDiscounts_Response_CUpcomingPackageDiscountInfo) GetRtimeDiscountEnd() uint32 {
	if x != nil && x.RtimeDiscountEnd != nil {
		return *x.RtimeDiscountEnd
	}
	return 0
}

type CPromotionPlanning_MarkLocalizationAssetComplete_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PromotionId *uint64 `protobuf:"fixed64,1,opt,name=promotion_id,json=promotionId" json:"promotion_id,omitempty"`
	Value       *bool   `protobuf:"varint,2,opt,name=value" json:"value,omitempty"`
}

func (x *CPromotionPlanning_MarkLocalizationAssetComplete_Request) Reset() {
	*x = CPromotionPlanning_MarkLocalizationAssetComplete_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_promotionplanning_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPromotionPlanning_MarkLocalizationAssetComplete_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPromotionPlanning_MarkLocalizationAssetComplete_Request) ProtoMessage() {}

func (x *CPromotionPlanning_MarkLocalizationAssetComplete_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_promotionplanning_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPromotionPlanning_MarkLocalizationAssetComplete_Request.ProtoReflect.Descriptor instead.
func (*CPromotionPlanning_MarkLocalizationAssetComplete_Request) Descriptor() ([]byte, []int) {
	return file_service_promotionplanning_proto_rawDescGZIP(), []int{47}
}

func (x *CPromotionPlanning_MarkLocalizationAssetComplete_Request) GetPromotionId() uint64 {
	if x != nil && x.PromotionId != nil {
		return *x.PromotionId
	}
	return 0
}

func (x *CPromotionPlanning_MarkLocalizationAssetComplete_Request) GetValue() bool {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return false
}

type CPromotionPlanning_MarkLocalizationAssetComplete_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CPromotionPlanning_MarkLocalizationAssetComplete_Response) Reset() {
	*x = CPromotionPlanning_MarkLocalizationAssetComplete_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_promotionplanning_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPromotionPlanning_MarkLocalizationAssetComplete_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPromotionPlanning_MarkLocalizationAssetComplete_Response) ProtoMessage() {}

func (x *CPromotionPlanning_MarkLocalizationAssetComplete_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_promotionplanning_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPromotionPlanning_MarkLocalizationAssetComplete_Response.ProtoReflect.Descriptor instead.
func (*CPromotionPlanning_MarkLocalizationAssetComplete_Response) Descriptor() ([]byte, []int) {
	return file_service_promotionplanning_proto_rawDescGZIP(), []int{48}
}

type CPromotionPlanning_ResendNotification_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PromotionId    *uint64 `protobuf:"fixed64,1,opt,name=promotion_id,json=promotionId" json:"promotion_id,omitempty"`
	NotificationId *uint64 `protobuf:"fixed64,2,opt,name=notification_id,json=notificationId" json:"notification_id,omitempty"`
}

func (x *CPromotionPlanning_ResendNotification_Request) Reset() {
	*x = CPromotionPlanning_ResendNotification_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_promotionplanning_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPromotionPlanning_ResendNotification_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPromotionPlanning_ResendNotification_Request) ProtoMessage() {}

func (x *CPromotionPlanning_ResendNotification_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_promotionplanning_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPromotionPlanning_ResendNotification_Request.ProtoReflect.Descriptor instead.
func (*CPromotionPlanning_ResendNotification_Request) Descriptor() ([]byte, []int) {
	return file_service_promotionplanning_proto_rawDescGZIP(), []int{49}
}

func (x *CPromotionPlanning_ResendNotification_Request) GetPromotionId() uint64 {
	if x != nil && x.PromotionId != nil {
		return *x.PromotionId
	}
	return 0
}

func (x *CPromotionPlanning_ResendNotification_Request) GetNotificationId() uint64 {
	if x != nil && x.NotificationId != nil {
		return *x.NotificationId
	}
	return 0
}

type CPromotionPlanning_ResendNotification_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CPromotionPlanning_ResendNotification_Response) Reset() {
	*x = CPromotionPlanning_ResendNotification_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_promotionplanning_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPromotionPlanning_ResendNotification_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPromotionPlanning_ResendNotification_Response) ProtoMessage() {}

func (x *CPromotionPlanning_ResendNotification_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_promotionplanning_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPromotionPlanning_ResendNotification_Response.ProtoReflect.Descriptor instead.
func (*CPromotionPlanning_ResendNotification_Response) Descriptor() ([]byte, []int) {
	return file_service_promotionplanning_proto_rawDescGZIP(), []int{50}
}

type CPromotionPlanning_SearchPlan_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token *string `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
}

func (x *CPromotionPlanning_SearchPlan_Request) Reset() {
	*x = CPromotionPlanning_SearchPlan_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_promotionplanning_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPromotionPlanning_SearchPlan_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPromotionPlanning_SearchPlan_Request) ProtoMessage() {}

func (x *CPromotionPlanning_SearchPlan_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_promotionplanning_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPromotionPlanning_SearchPlan_Request.ProtoReflect.Descriptor instead.
func (*CPromotionPlanning_SearchPlan_Request) Descriptor() ([]byte, []int) {
	return file_service_promotionplanning_proto_rawDescGZIP(), []int{51}
}

func (x *CPromotionPlanning_SearchPlan_Request) GetToken() string {
	if x != nil && x.Token != nil {
		return *x.Token
	}
	return ""
}

type CPromotionPlanning_SearchPlan_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plan []*CPromotionPlan `protobuf:"bytes,1,rep,name=plan" json:"plan,omitempty"`
}

func (x *CPromotionPlanning_SearchPlan_Response) Reset() {
	*x = CPromotionPlanning_SearchPlan_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_promotionplanning_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPromotionPlanning_SearchPlan_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPromotionPlanning_SearchPlan_Response) ProtoMessage() {}

func (x *CPromotionPlanning_SearchPlan_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_promotionplanning_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPromotionPlanning_SearchPlan_Response.ProtoReflect.Descriptor instead.
func (*CPromotionPlanning_SearchPlan_Response) Descriptor() ([]byte, []int) {
	return file_service_promotionplanning_proto_rawDescGZIP(), []int{52}
}

func (x *CPromotionPlanning_SearchPlan_Response) GetPlan() []*CPromotionPlan {
	if x != nil {
		return x.Plan
	}
	return nil
}

type CPromotionPlanning_SendNotification_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PromotionId                *uint64 `protobuf:"fixed64,1,opt,name=promotion_id,json=promotionId" json:"promotion_id,omitempty"`
	NotificationType           *int32  `protobuf:"varint,2,opt,name=notification_type,json=notificationType" json:"notification_type,omitempty"`
	OnlyExplicitEmailAddresses *bool   `protobuf:"varint,3,opt,name=only_explicit_email_addresses,json=onlyExplicitEmailAddresses" json:"only_explicit_email_addresses,omitempty"`
}

func (x *CPromotionPlanning_SendNotification_Request) Reset() {
	*x = CPromotionPlanning_SendNotification_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_promotionplanning_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPromotionPlanning_SendNotification_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPromotionPlanning_SendNotification_Request) ProtoMessage() {}

func (x *CPromotionPlanning_SendNotification_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_promotionplanning_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPromotionPlanning_SendNotification_Request.ProtoReflect.Descriptor instead.
func (*CPromotionPlanning_SendNotification_Request) Descriptor() ([]byte, []int) {
	return file_service_promotionplanning_proto_rawDescGZIP(), []int{53}
}

func (x *CPromotionPlanning_SendNotification_Request) GetPromotionId() uint64 {
	if x != nil && x.PromotionId != nil {
		return *x.PromotionId
	}
	return 0
}

func (x *CPromotionPlanning_SendNotification_Request) GetNotificationType() int32 {
	if x != nil && x.NotificationType != nil {
		return *x.NotificationType
	}
	return 0
}

func (x *CPromotionPlanning_SendNotification_Request) GetOnlyExplicitEmailAddresses() bool {
	if x != nil && x.OnlyExplicitEmailAddresses != nil {
		return *x.OnlyExplicitEmailAddresses
	}
	return false
}

type CPromotionPlanning_SendNotification_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CPromotionPlanning_SendNotification_Response) Reset() {
	*x = CPromotionPlanning_SendNotification_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_promotionplanning_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPromotionPlanning_SendNotification_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPromotionPlanning_SendNotification_Response) ProtoMessage() {}

func (x *CPromotionPlanning_SendNotification_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_promotionplanning_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPromotionPlanning_SendNotification_Response.ProtoReflect.Descriptor instead.
func (*CPromotionPlanning_SendNotification_Response) Descriptor() ([]byte, []int) {
	return file_service_promotionplanning_proto_rawDescGZIP(), []int{54}
}

type CPromotionPlanning_SetPromotionEmailTarget_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PromotionId  *uint64 `protobuf:"fixed64,1,opt,name=promotion_id,json=promotionId" json:"promotion_id,omitempty"`
	Add          *bool   `protobuf:"varint,2,opt,name=add" json:"add,omitempty"`
	EmailAddress *string `protobuf:"bytes,3,opt,name=email_address,json=emailAddress" json:"email_address,omitempty"`
}

func (x *CPromotionPlanning_SetPromotionEmailTarget_Request) Reset() {
	*x = CPromotionPlanning_SetPromotionEmailTarget_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_promotionplanning_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPromotionPlanning_SetPromotionEmailTarget_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPromotionPlanning_SetPromotionEmailTarget_Request) ProtoMessage() {}

func (x *CPromotionPlanning_SetPromotionEmailTarget_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_promotionplanning_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPromotionPlanning_SetPromotionEmailTarget_Request.ProtoReflect.Descriptor instead.
func (*CPromotionPlanning_SetPromotionEmailTarget_Request) Descriptor() ([]byte, []int) {
	return file_service_promotionplanning_proto_rawDescGZIP(), []int{55}
}

func (x *CPromotionPlanning_SetPromotionEmailTarget_Request) GetPromotionId() uint64 {
	if x != nil && x.PromotionId != nil {
		return *x.PromotionId
	}
	return 0
}

func (x *CPromotionPlanning_SetPromotionEmailTarget_Request) GetAdd() bool {
	if x != nil && x.Add != nil {
		return *x.Add
	}
	return false
}

func (x *CPromotionPlanning_SetPromotionEmailTarget_Request) GetEmailAddress() string {
	if x != nil && x.EmailAddress != nil {
		return *x.EmailAddress
	}
	return ""
}

type CPromotionPlanning_SetPromotionEmailTarget_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CPromotionPlanning_SetPromotionEmailTarget_Response) Reset() {
	*x = CPromotionPlanning_SetPromotionEmailTarget_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_promotionplanning_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPromotionPlanning_SetPromotionEmailTarget_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPromotionPlanning_SetPromotionEmailTarget_Response) ProtoMessage() {}

func (x *CPromotionPlanning_SetPromotionEmailTarget_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_promotionplanning_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPromotionPlanning_SetPromotionEmailTarget_Response.ProtoReflect.Descriptor instead.
func (*CPromotionPlanning_SetPromotionEmailTarget_Response) Descriptor() ([]byte, []int) {
	return file_service_promotionplanning_proto_rawDescGZIP(), []int{56}
}

type CPromotionPlanning_UpdatePlan_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plan        *CPromotionPlan `protobuf:"bytes,1,opt,name=plan" json:"plan,omitempty"`
	PromotionId *uint64         `protobuf:"fixed64,2,opt,name=promotion_id,json=promotionId" json:"promotion_id,omitempty"`
}

func (x *CPromotionPlanning_UpdatePlan_Request) Reset() {
	*x = CPromotionPlanning_UpdatePlan_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_promotionplanning_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPromotionPlanning_UpdatePlan_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPromotionPlanning_UpdatePlan_Request) ProtoMessage() {}

func (x *CPromotionPlanning_UpdatePlan_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_promotionplanning_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPromotionPlanning_UpdatePlan_Request.ProtoReflect.Descriptor instead.
func (*CPromotionPlanning_UpdatePlan_Request) Descriptor() ([]byte, []int) {
	return file_service_promotionplanning_proto_rawDescGZIP(), []int{57}
}

func (x *CPromotionPlanning_UpdatePlan_Request) GetPlan() *CPromotionPlan {
	if x != nil {
		return x.Plan
	}
	return nil
}

func (x *CPromotionPlanning_UpdatePlan_Request) GetPromotionId() uint64 {
	if x != nil && x.PromotionId != nil {
		return *x.PromotionId
	}
	return 0
}

type CPromotionPlanning_UpdatePlan_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CPromotionPlanning_UpdatePlan_Response) Reset() {
	*x = CPromotionPlanning_UpdatePlan_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_promotionplanning_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPromotionPlanning_UpdatePlan_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPromotionPlanning_UpdatePlan_Response) ProtoMessage() {}

func (x *CPromotionPlanning_UpdatePlan_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_promotionplanning_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPromotionPlanning_UpdatePlan_Response.ProtoReflect.Descriptor instead.
func (*CPromotionPlanning_UpdatePlan_Response) Descriptor() ([]byte, []int) {
	return file_service_promotionplanning_proto_rawDescGZIP(), []int{58}
}

var File_service_promotionplanning_proto protoreflect.FileDescriptor

var file_service_promotionplanning_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x84, 0x02, 0x0a, 0x1d, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52,
	0x0e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x06, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x64,
	0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0x82, 0xb5, 0x18, 0x04, 0x65,
	0x6e, 0x75, 0x6d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x72, 0x74, 0x5f,
	0x73, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x72, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xe3, 0x04, 0x0a, 0x0e,
	0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x21,
	0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x06, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x4a, 0x73, 0x6f, 0x6e, 0x64, 0x61, 0x74, 0x61, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x61, 0x72, 0x74,
	0x6e, 0x65, 0x72, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x4a, 0x73, 0x6f, 0x6e, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x6a, 0x73, 0x6f,
	0x6e, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x70,
	0x75, 0x74, 0x4a, 0x73, 0x6f, 0x6e, 0x64, 0x61, 0x74, 0x61, 0x12, 0x2c, 0x0a, 0x12, 0x72, 0x74,
	0x69, 0x6d, 0x65, 0x33, 0x32, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x33, 0x32, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x72, 0x74, 0x69, 0x6d,
	0x65, 0x33, 0x32, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0e, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x33, 0x32, 0x45, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x6e, 0x70,
	0x75, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x12, 0x28, 0x0a, 0x10, 0x6c,
	0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x19, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72,
	0x5f, 0x72, 0x65, 0x61, 0x64, 0x6f, 0x6e, 0x6c, 0x79, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65,
	0x72, 0x52, 0x65, 0x61, 0x64, 0x6f, 0x6e, 0x6c, 0x79, 0x4a, 0x73, 0x6f, 0x6e, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x3a, 0x0a, 0x19, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x5f, 0x77, 0x72, 0x69,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x57, 0x72, 0x69,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x4a, 0x73, 0x6f, 0x6e, 0x64, 0x61, 0x74, 0x61, 0x12, 0x38, 0x0a,
	0x18, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x6f, 0x6e, 0x6c, 0x79,
	0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x16, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x61, 0x64, 0x6f, 0x6e, 0x6c, 0x79, 0x4a,
	0x73, 0x6f, 0x6e, 0x64, 0x61, 0x74, 0x61, 0x12, 0x38, 0x0a, 0x18, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x73, 0x5f, 0x77, 0x72, 0x69, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x73, 0x57, 0x72, 0x69, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4a, 0x73, 0x6f, 0x6e, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x96, 0x03, 0x0a, 0x2d, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x6c, 0x61, 0x6e, 0x5f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x50,
	0x61, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x5f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x6c, 0x61, 0x6e, 0x5f, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x63, 0x6c,
	0x61, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x63,
	0x6c, 0x61, 0x6e, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x67, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x06, 0x52, 0x0c, 0x63, 0x6c, 0x61, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x47, 0x69,
	0x64, 0x12, 0x28, 0x0a, 0x10, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x61, 0x6c, 0x65, 0x5f,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x72, 0x74, 0x69,
	0x6d, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x72,
	0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x61, 0x6c, 0x65, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0c, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x45, 0x6e,
	0x64, 0x12, 0x24, 0x0a, 0x0e, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x5f, 0x64, 0x65, 0x61, 0x6c, 0x5f,
	0x67, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0c, 0x64, 0x61, 0x69, 0x6c, 0x79,
	0x44, 0x65, 0x61, 0x6c, 0x47, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x67, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0c,
	0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x14,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2b, 0x0a,
	0x11, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x70, 0x70,
	0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74,
	0x69, 0x73, 0x69, 0x6e, 0x67, 0x41, 0x70, 0x70, 0x69, 0x64, 0x22, 0xa2, 0x02, 0x0a, 0x2e, 0x43,
	0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x5f, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x50, 0x61, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x50,
	0x72, 0x6f, 0x6d, 0x6f, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a,
	0x0f, 0x63, 0x6c, 0x61, 0x6e, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x63, 0x6c, 0x61, 0x6e, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x6c, 0x61, 0x6e, 0x5f, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x5f, 0x67, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0c, 0x63,
	0x6c, 0x61, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x47, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x64,
	0x61, 0x69, 0x6c, 0x79, 0x5f, 0x64, 0x65, 0x61, 0x6c, 0x5f, 0x67, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x06, 0x52, 0x0c, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x44, 0x65, 0x61, 0x6c, 0x47, 0x69,
	0x64, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x67,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x47, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x67, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x06, 0x52, 0x0f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47,
	0x69, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x69, 0x6e,
	0x67, 0x5f, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x61,
	0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x69, 0x6e, 0x67, 0x41, 0x70, 0x70, 0x69, 0x64, 0x22,
	0x75, 0x0a, 0x31, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61,
	0x6e, 0x5f, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c,
	0x61, 0x6e, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x5f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x74,
	0x6e, 0x65, 0x72, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x61, 0x72,
	0x74, 0x6e, 0x65, 0x72, 0x69, 0x64, 0x22, 0xb8, 0x01, 0x0a, 0x32, 0x43, 0x50, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x5f, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x44,
	0x61, 0x69, 0x6c, 0x79, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a,
	0x05, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x43,
	0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x5f, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x53, 0x61,
	0x6c, 0x65, 0x73, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x5f, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x61, 0x6c, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x05, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61,
	0x72, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x22, 0xc3, 0x01, 0x0a, 0x46, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x6c, 0x61, 0x6e, 0x5f, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x5f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x50, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a,
	0x72, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x46, 0x0a, 0x0d, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x73, 0x61, 0x6c, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x5f, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x53,
	0x61, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0c, 0x73, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x22, 0x91, 0x03, 0x0a, 0x3a, 0x43, 0x50, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x5f, 0x47, 0x65, 0x74, 0x50, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x53, 0x61, 0x6c, 0x65, 0x73,
	0x44, 0x61, 0x69, 0x6c, 0x79, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x73, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x61, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x46, 0x0a, 0x0d,
	0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x6c, 0x61, 0x6e, 0x5f, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x53, 0x61, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0c, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x53,
	0x61, 0x6c, 0x65, 0x73, 0x12, 0x73, 0x0a, 0x11, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x5f, 0x70, 0x72,
	0x6f, 0x6d, 0x6f, 0x5f, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x47, 0x2e, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e,
	0x5f, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61,
	0x6e, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x5f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x52, 0x0f, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x50,
	0x72, 0x6f, 0x6d, 0x6f, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x70, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x5f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x22, 0xfe, 0x02, 0x0a, 0x44,
	0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x5f, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x53,
	0x61, 0x6c, 0x65, 0x73, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x5f, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x61, 0x6c, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x12, 0x73, 0x0a, 0x11, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x5f,
	0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x5f, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x47, 0x2e, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c,
	0x61, 0x6e, 0x5f, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x6c, 0x61, 0x6e, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x5f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x50, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x52, 0x0f, 0x64, 0x61, 0x69, 0x6c,
	0x79, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x12, 0x46, 0x0a, 0x0d, 0x73,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x6c, 0x61, 0x6e, 0x5f, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x53, 0x61, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0c, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x53, 0x61,
	0x6c, 0x65, 0x73, 0x12, 0x57, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x5f, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x44, 0x61, 0x69, 0x6c,
	0x79, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x22, 0x80, 0x07, 0x0a,
	0x20, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x5f,
	0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x53, 0x61, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x39, 0x0a, 0x19, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x67, 0x72, 0x6f, 0x73, 0x73,
	0x5f, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x75, 0x73, 0x64, 0x78, 0x31, 0x30, 0x30, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x16, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x47, 0x72, 0x6f, 0x73, 0x73,
	0x53, 0x61, 0x6c, 0x65, 0x73, 0x55, 0x73, 0x64, 0x78, 0x31, 0x30, 0x30, 0x12, 0x3d, 0x0a, 0x1b,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x67, 0x72, 0x6f, 0x73, 0x73, 0x5f, 0x72, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x73, 0x5f, 0x75, 0x73, 0x64, 0x78, 0x31, 0x30, 0x30, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x18, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x47, 0x72, 0x6f, 0x73, 0x73, 0x52, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x73, 0x55, 0x73, 0x64, 0x78, 0x31, 0x30, 0x30, 0x12, 0x31, 0x0a, 0x15, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6e, 0x65, 0x74, 0x5f, 0x74, 0x61, 0x78, 0x5f, 0x75, 0x73, 0x64,
	0x78, 0x31, 0x30, 0x30, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x4e, 0x65, 0x74, 0x54, 0x61, 0x78, 0x55, 0x73, 0x64, 0x78, 0x31, 0x30, 0x30, 0x12, 0x39,
	0x0a, 0x19, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x67, 0x72, 0x6f, 0x73, 0x73, 0x5f, 0x73, 0x61,
	0x6c, 0x65, 0x73, 0x5f, 0x75, 0x73, 0x64, 0x78, 0x31, 0x30, 0x30, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x16, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x47, 0x72, 0x6f, 0x73, 0x73, 0x53, 0x61, 0x6c,
	0x65, 0x73, 0x55, 0x73, 0x64, 0x78, 0x31, 0x30, 0x30, 0x12, 0x3d, 0x0a, 0x1b, 0x73, 0x74, 0x65,
	0x61, 0x6d, 0x5f, 0x67, 0x72, 0x6f, 0x73, 0x73, 0x5f, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x73,
	0x5f, 0x75, 0x73, 0x64, 0x78, 0x31, 0x30, 0x30, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x18,
	0x73, 0x74, 0x65, 0x61, 0x6d, 0x47, 0x72, 0x6f, 0x73, 0x73, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x73, 0x55, 0x73, 0x64, 0x78, 0x31, 0x30, 0x30, 0x12, 0x31, 0x0a, 0x15, 0x73, 0x74, 0x65, 0x61,
	0x6d, 0x5f, 0x6e, 0x65, 0x74, 0x5f, 0x74, 0x61, 0x78, 0x5f, 0x75, 0x73, 0x64, 0x78, 0x31, 0x30,
	0x30, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x4e, 0x65,
	0x74, 0x54, 0x61, 0x78, 0x55, 0x73, 0x64, 0x78, 0x31, 0x30, 0x30, 0x12, 0x3c, 0x0a, 0x1b, 0x69,
	0x6e, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x73, 0x73, 0x5f, 0x73, 0x61, 0x6c,
	0x65, 0x73, 0x5f, 0x75, 0x73, 0x64, 0x78, 0x31, 0x30, 0x30, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x17, 0x69, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x47, 0x72, 0x6f, 0x73, 0x73, 0x53, 0x61, 0x6c,
	0x65, 0x73, 0x55, 0x73, 0x64, 0x78, 0x31, 0x30, 0x30, 0x12, 0x40, 0x0a, 0x1d, 0x69, 0x6e, 0x5f,
	0x67, 0x61, 0x6d, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x73, 0x73, 0x5f, 0x72, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x73, 0x5f, 0x75, 0x73, 0x64, 0x78, 0x31, 0x30, 0x30, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x19, 0x69, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x47, 0x72, 0x6f, 0x73, 0x73, 0x52, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x73, 0x55, 0x73, 0x64, 0x78, 0x31, 0x30, 0x30, 0x12, 0x34, 0x0a, 0x17, 0x69,
	0x6e, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x6e, 0x65, 0x74, 0x5f, 0x74, 0x61, 0x78, 0x5f, 0x75,
	0x73, 0x64, 0x78, 0x31, 0x30, 0x30, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x69, 0x6e,
	0x47, 0x61, 0x6d, 0x65, 0x4e, 0x65, 0x74, 0x54, 0x61, 0x78, 0x55, 0x73, 0x64, 0x78, 0x31, 0x30,
	0x30, 0x12, 0x35, 0x0a, 0x17, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6e, 0x65, 0x74, 0x5f, 0x73,
	0x61, 0x6c, 0x65, 0x73, 0x5f, 0x75, 0x73, 0x64, 0x78, 0x31, 0x30, 0x30, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x14, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4e, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65,
	0x73, 0x55, 0x73, 0x64, 0x78, 0x31, 0x30, 0x30, 0x12, 0x35, 0x0a, 0x17, 0x73, 0x74, 0x65, 0x61,
	0x6d, 0x5f, 0x6e, 0x65, 0x74, 0x5f, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x75, 0x73, 0x64, 0x78,
	0x31, 0x30, 0x30, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x73, 0x74, 0x65, 0x61, 0x6d,
	0x4e, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x55, 0x73, 0x64, 0x78, 0x31, 0x30, 0x30, 0x12,
	0x38, 0x0a, 0x19, 0x69, 0x6e, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x6e, 0x65, 0x74, 0x5f, 0x73,
	0x61, 0x6c, 0x65, 0x73, 0x5f, 0x75, 0x73, 0x64, 0x78, 0x31, 0x30, 0x30, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x15, 0x69, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x65, 0x74, 0x53, 0x61, 0x6c,
	0x65, 0x73, 0x55, 0x73, 0x64, 0x78, 0x31, 0x30, 0x30, 0x12, 0x33, 0x0a, 0x16, 0x73, 0x74, 0x65,
	0x61, 0x6d, 0x5f, 0x67, 0x72, 0x6f, 0x73, 0x73, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x5f, 0x73,
	0x6f, 0x6c, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x73, 0x74, 0x65, 0x61, 0x6d,
	0x47, 0x72, 0x6f, 0x73, 0x73, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x53, 0x6f, 0x6c, 0x64, 0x12, 0x3b,
	0x0a, 0x1a, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x67, 0x72, 0x6f, 0x73, 0x73, 0x5f, 0x75, 0x6e,
	0x69, 0x74, 0x73, 0x5f, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x17, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x47, 0x72, 0x6f, 0x73, 0x73, 0x55, 0x6e,
	0x69, 0x74, 0x73, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x12, 0x32, 0x0a, 0x15, 0x67,
	0x72, 0x6f, 0x73, 0x73, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x67, 0x72, 0x6f, 0x73,
	0x73, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x64, 0x22,
	0x4c, 0x0a, 0x25, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61,
	0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e,
	0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x04, 0x70, 0x6c, 0x61, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x04, 0x70, 0x6c, 0x61, 0x6e, 0x22, 0x75, 0x0a,
	0x26, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e,
	0x69, 0x6e, 0x67, 0x5f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x5f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0b, 0x70,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x6e,
	0x70, 0x75, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x4b, 0x65, 0x79, 0x22, 0x4a, 0x0a, 0x25, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x50, 0x6c, 0x61, 0x6e, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a,
	0x0c, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x06, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x22, 0x28, 0x0a, 0x26, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c,
	0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6c, 0x61,
	0x6e, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x58, 0x0a, 0x37, 0x43, 0x50,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67,
	0x5f, 0x47, 0x65, 0x74, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x69, 0x6e, 0x67, 0x41,
	0x70, 0x70, 0x73, 0x46, 0x6f, 0x72, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x5f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x6e,
	0x65, 0x72, 0x49, 0x64, 0x22, 0xb0, 0x01, 0x0a, 0x38, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x47, 0x65, 0x74, 0x41,
	0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x69, 0x6e, 0x67, 0x41, 0x70, 0x70, 0x73, 0x46, 0x6f,
	0x72, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x74, 0x0a, 0x10, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x69, 0x6e, 0x67,
	0x5f, 0x61, 0x70, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x49, 0x2e, 0x43, 0x50,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67,
	0x5f, 0x47, 0x65, 0x74, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x69, 0x6e, 0x67, 0x41,
	0x70, 0x70, 0x73, 0x46, 0x6f, 0x72, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x5f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x69,
	0x6e, 0x67, 0x5f, 0x61, 0x70, 0x70, 0x52, 0x0f, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73,
	0x69, 0x6e, 0x67, 0x41, 0x70, 0x70, 0x73, 0x22, 0x93, 0x01, 0x0a, 0x48, 0x43, 0x50, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x47,
	0x65, 0x74, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x69, 0x6e, 0x67, 0x41, 0x70, 0x70,
	0x73, 0x46, 0x6f, 0x72, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x5f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x69, 0x6e, 0x67,
	0x5f, 0x61, 0x70, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x70,
	0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70,
	0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x69, 0x64, 0x22, 0x2d, 0x0a,
	0x2b, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e,
	0x69, 0x6e, 0x67, 0x5f, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x50, 0x6c, 0x61, 0x6e, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x53, 0x0a, 0x2c,
	0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69,
	0x6e, 0x67, 0x5f, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x50,
	0x6c, 0x61, 0x6e, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x04,
	0x70, 0x6c, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x50, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x04, 0x70, 0x6c, 0x61,
	0x6e, 0x22, 0xa6, 0x01, 0x0a, 0x2d, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50,
	0x6c, 0x61, 0x6e, 0x73, 0x46, 0x6f, 0x72, 0x41, 0x70, 0x70, 0x73, 0x5f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0d, 0x52, 0x06, 0x61, 0x70, 0x70, 0x69, 0x64, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x65,
	0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0c, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x73,
	0x12, 0x38, 0x0a, 0x18, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x5f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x16, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x22, 0xd1, 0x01, 0x0a, 0x2e, 0x43,
	0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e,
	0x67, 0x5f, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x6c, 0x61, 0x6e, 0x73, 0x46, 0x6f, 0x72,
	0x41, 0x70, 0x70, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a,
	0x05, 0x70, 0x6c, 0x61, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43,
	0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x05, 0x70,
	0x6c, 0x61, 0x6e, 0x73, 0x12, 0x78, 0x0a, 0x16, 0x61, 0x70, 0x70, 0x73, 0x5f, 0x69, 0x6e, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x5f, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x50, 0x6c, 0x61, 0x6e, 0x73, 0x46, 0x6f, 0x72, 0x41, 0x70, 0x70, 0x73, 0x5f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x43, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x64, 0x49, 0x6e, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x52, 0x13, 0x61, 0x70, 0x70, 0x73, 0x49,
	0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x49, 0x6e, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x22, 0x82,
	0x01, 0x0a, 0x42, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61,
	0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x6c, 0x61, 0x6e,
	0x73, 0x46, 0x6f, 0x72, 0x41, 0x70, 0x70, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x5f, 0x43, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x49, 0x6e,
	0x53, 0x61, 0x6c, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x69, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x06, 0x61, 0x70, 0x70, 0x69, 0x64, 0x73, 0x12, 0x24, 0x0a,
	0x0e, 0x63, 0x6c, 0x61, 0x6e, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x67, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0c, 0x63, 0x6c, 0x61, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x47, 0x69, 0x64, 0x22, 0xab, 0x01, 0x0a, 0x30, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x50, 0x6c, 0x61, 0x6e, 0x73, 0x46, 0x6f, 0x72, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72,
	0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x74,
	0x6e, 0x65, 0x72, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x61, 0x72,
	0x74, 0x6e, 0x65, 0x72, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x68,
	0x69, 0x64, 0x64, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x73, 0x68, 0x6f,
	0x77, 0x48, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74,
	0x65, 0x22, 0x5a, 0x0a, 0x31, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x6c,
	0x61, 0x6e, 0x73, 0x46, 0x6f, 0x72, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x5f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x70, 0x6c, 0x61, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x05, 0x70, 0x6c, 0x61, 0x6e, 0x73, 0x22, 0x75, 0x0a,
	0x30, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e,
	0x69, 0x6e, 0x67, 0x5f, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65,
	0x57, 0x65, 0x65, 0x6b, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65,
	0x72, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x22, 0x89, 0x01, 0x0a, 0x31, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x47, 0x65, 0x74, 0x41,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x57, 0x65, 0x65, 0x6b, 0x53, 0x6c, 0x6f, 0x74,
	0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x72, 0x74,
	0x5f, 0x77, 0x65, 0x65, 0x6b, 0x6c, 0x6f, 0x6e, 0x67, 0x5f, 0x64, 0x65, 0x61, 0x6c, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0f, 0x72, 0x74, 0x57, 0x65, 0x65, 0x6b, 0x6c, 0x6f, 0x6e,
	0x67, 0x44, 0x65, 0x61, 0x6c, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x72, 0x74, 0x5f, 0x77, 0x65, 0x65,
	0x6b, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x65, 0x61, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d,
	0x52, 0x0e, 0x72, 0x74, 0x57, 0x65, 0x65, 0x6b, 0x65, 0x6e, 0x64, 0x44, 0x65, 0x61, 0x6c, 0x73,
	0x22, 0x47, 0x0a, 0x22, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c,
	0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x5f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0b, 0x70, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x4a, 0x0a, 0x23, 0x43, 0x50, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f,
	0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x23, 0x0a, 0x04, 0x70, 0x6c, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x52,
	0x04, 0x70, 0x6c, 0x61, 0x6e, 0x22, 0x5e, 0x0a, 0x32, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x47, 0x65, 0x74, 0x50,
	0x6c, 0x61, 0x6e, 0x42, 0x79, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x4b, 0x65, 0x79, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x69,
	0x6e, 0x70, 0x75, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x4b, 0x65, 0x79, 0x22, 0x5a, 0x0a, 0x33, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x47, 0x65, 0x74, 0x50,
	0x6c, 0x61, 0x6e, 0x42, 0x79, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x4b, 0x65, 0x79, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x04,
	0x70, 0x6c, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x50, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x04, 0x70, 0x6c, 0x61,
	0x6e, 0x22, 0xa7, 0x01, 0x0a, 0x36, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x6e,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x52,
	0x61, 0x6e, 0x67, 0x65, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c,
	0x6f, 0x6c, 0x64, 0x65, 0x73, 0x74, 0x5f, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0b, 0x6f, 0x6c, 0x64, 0x65, 0x73, 0x74, 0x52, 0x74, 0x69, 0x6d, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x6e, 0x65, 0x77, 0x65, 0x73, 0x74, 0x5f, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6e, 0x65, 0x77, 0x65, 0x73, 0x74, 0x52, 0x74, 0x69,
	0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x22, 0x60, 0x0a, 0x37, 0x43,
	0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e,
	0x67, 0x5f, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x49, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x70, 0x6c, 0x61, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x05, 0x70, 0x6c, 0x61, 0x6e, 0x73, 0x22, 0x66, 0x0a,
	0x2f, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e,
	0x69, 0x6e, 0x67, 0x5f, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x73, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x53, 0x69, 0x6e, 0x63, 0x65, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x74, 0x6f, 0x5f, 0x72,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x75, 0x70, 0x74, 0x6f,
	0x52, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x83, 0x01, 0x0a, 0x30, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x47, 0x65, 0x74,
	0x50, 0x6c, 0x61, 0x6e, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x53, 0x69, 0x6e, 0x63,
	0x65, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x70, 0x6c,
	0x61, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x50, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x05, 0x70, 0x6c, 0x61, 0x6e,
	0x73, 0x12, 0x28, 0x0a, 0x10, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x70, 0x6c, 0x61,
	0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x06, 0x52, 0x0e, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x73, 0x22, 0xa0, 0x01, 0x0a, 0x37,
	0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69,
	0x6e, 0x67, 0x5f, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x6c, 0x61, 0x6e, 0x46, 0x6f, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x50, 0x61, 0x67, 0x65, 0x73, 0x5f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x65, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x42, 0x2e,
	0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69,
	0x6e, 0x67, 0x5f, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x6c, 0x61, 0x6e, 0x46, 0x6f, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x50, 0x61, 0x67, 0x65, 0x73, 0x5f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x43, 0x53, 0x61, 0x6c, 0x65, 0x50, 0x61, 0x67,
	0x65, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x91,
	0x01, 0x0a, 0x41, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61,
	0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x46, 0x6f, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x50, 0x61, 0x67,
	0x65, 0x73, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x43, 0x53, 0x61, 0x6c, 0x65,
	0x50, 0x61, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x6c, 0x61, 0x6e, 0x5f, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x63,
	0x6c, 0x61, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e,
	0x67, 0x69, 0x64, 0x5f, 0x63, 0x6c, 0x61, 0x6e, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x06, 0x52, 0x0c, 0x67, 0x69, 0x64, 0x43, 0x6c, 0x61, 0x6e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x22, 0x61, 0x0a, 0x38, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x46, 0x6f, 0x72, 0x53, 0x61, 0x6c, 0x65,
	0x50, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25,
	0x0a, 0x05, 0x70, 0x6c, 0x61, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x05,
	0x70, 0x6c, 0x61, 0x6e, 0x73, 0x22, 0x86, 0x01, 0x0a, 0x38, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x47, 0x65, 0x74,
	0x53, 0x61, 0x6c, 0x65, 0x50, 0x61, 0x67, 0x65, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x73, 0x46, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x2b, 0x0a, 0x11, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x69, 0x6e,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x22, 0x92,
	0x01, 0x0a, 0x39, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61,
	0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x50, 0x61, 0x67,
	0x65, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x50, 0x72,
	0x6f, 0x6d, 0x6f, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x05,
	0x63, 0x6c, 0x61, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x43, 0x50,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67,
	0x5f, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x50, 0x61, 0x67, 0x65, 0x43, 0x61, 0x6e, 0x64,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x5f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x63, 0x6c, 0x61, 0x6e, 0x52, 0x05, 0x63, 0x6c,
	0x61, 0x6e, 0x73, 0x22, 0x91, 0x02, 0x0a, 0x3e, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x47, 0x65, 0x74, 0x53, 0x61,
	0x6c, 0x65, 0x50, 0x61, 0x67, 0x65, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x73,
	0x46, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x5f, 0x63, 0x6c, 0x61, 0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x6c, 0x61, 0x6e, 0x5f, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0d, 0x63, 0x6c, 0x61, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x63, 0x6c, 0x61, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x6c, 0x61, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x69,
	0x73, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x68, 0x6f, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x48,
	0x6f, 0x6d, 0x65, 0x12, 0x62, 0x0a, 0x0a, 0x73, 0x61, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x67, 0x65,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x47, 0x65, 0x74,
	0x53, 0x61, 0x6c, 0x65, 0x50, 0x61, 0x67, 0x65, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x73, 0x46, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x5f, 0x73, 0x61, 0x6c, 0x65, 0x70, 0x61, 0x67, 0x65, 0x52, 0x09, 0x73, 0x61,
	0x6c, 0x65, 0x50, 0x61, 0x67, 0x65, 0x73, 0x22, 0xb7, 0x02, 0x0a, 0x42, 0x43, 0x50, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x47,
	0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x50, 0x61, 0x67, 0x65, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x5f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x73, 0x61, 0x6c, 0x65, 0x70, 0x61, 0x67, 0x65, 0x12, 0x26,
	0x0a, 0x0f, 0x63, 0x6c, 0x61, 0x6e, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x63, 0x6c, 0x61, 0x6e, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x67, 0x69, 0x64, 0x5f, 0x63, 0x6c,
	0x61, 0x6e, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0c,
	0x67, 0x69, 0x64, 0x43, 0x6c, 0x61, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x18, 0x65, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x61, 0x6c, 0x65, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x15, 0x65, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x53, 0x61, 0x6c, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x22, 0x7c, 0x0a, 0x2e, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6e, 0x74, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x06, 0x52,
	0x0e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22,
	0x6b, 0x0a, 0x2f, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61,
	0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x38, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0xd8, 0x01, 0x0a,
	0x38, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e,
	0x69, 0x6e, 0x67, 0x5f, 0x47, 0x65, 0x74, 0x55, 0x70, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x74, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x72, 0x74, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x74, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x72, 0x74, 0x65, 0x6e, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x69, 0x6e, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x50, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x73, 0x12, 0x41, 0x0a, 0x1a, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x6d,
	0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x72, 0x61,
	0x6e, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x04, 0x74, 0x72, 0x75, 0x65, 0x52, 0x17,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x53, 0x61,
	0x6c, 0x65, 0x73, 0x52, 0x61, 0x6e, 0x6b, 0x22, 0xb4, 0x02, 0x0a, 0x39, 0x43, 0x50, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x47,
	0x65, 0x74, 0x55, 0x70, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x64, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x5f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x80, 0x01, 0x0a, 0x0f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x57, 0x2e, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e,
	0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x47, 0x65, 0x74, 0x55, 0x70, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x43, 0x55, 0x70, 0x63,
	0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x44, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x74, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x5f,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x53, 0x2e,
	0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69,
	0x6e, 0x67, 0x5f, 0x47, 0x65, 0x74, 0x55, 0x70, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x43, 0x55, 0x70, 0x63, 0x6f, 0x6d,
	0x69, 0x6e, 0x67, 0x41, 0x70, 0x70, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0xea,
	0x04, 0x0a, 0x52, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61,
	0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x47, 0x65, 0x74, 0x55, 0x70, 0x63, 0x6f, 0x6d, 0x69, 0x6e,
	0x67, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x43, 0x55, 0x70,
	0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x41, 0x70, 0x70, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x63,
	0x68, 0x65, 0x61, 0x70, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x63, 0x68, 0x65, 0x61, 0x70, 0x65,
	0x73, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x63,
	0x68, 0x65, 0x61, 0x70, 0x65, 0x73, 0x74, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x63, 0x68, 0x65, 0x61, 0x70,
	0x65, 0x73, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x34, 0x0a,
	0x16, 0x63, 0x68, 0x65, 0x61, 0x70, 0x65, 0x73, 0x74, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x63,
	0x68, 0x65, 0x61, 0x70, 0x65, 0x73, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x1a, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x6f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x75, 0x73,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x17, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x55, 0x73, 0x64,
	0x12, 0x30, 0x0a, 0x14, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x64, 0x5f, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x5f, 0x75, 0x73, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x55,
	0x73, 0x64, 0x12, 0x2f, 0x0a, 0x13, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x70,
	0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x12, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x61, 0x67, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x12, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x10, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x45, 0x6e, 0x64, 0x12, 0x36, 0x0a, 0x17, 0x6e, 0x75, 0x6d, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x15, 0x6e, 0x75, 0x6d, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x6d,
	0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x72, 0x61,
	0x6e, 0x6b, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x52, 0x61, 0x6e, 0x6b, 0x22, 0xaa, 0x03, 0x0a, 0x56,
	0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69,
	0x6e, 0x67, 0x5f, 0x47, 0x65, 0x74, 0x55, 0x70, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x43, 0x55, 0x70, 0x63, 0x6f, 0x6d,
	0x69, 0x6e, 0x67, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x13, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61,
	0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x0a, 0x12,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x75,
	0x73, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x55, 0x73, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x75, 0x73, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x55, 0x73, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x72, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x44, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x72, 0x74,
	0x69, 0x6d, 0x65, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x65, 0x6e, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x44, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x6e, 0x64, 0x22, 0x73, 0x0a, 0x38, 0x43, 0x50, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x4d,
	0x61, 0x72, 0x6b, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3b, 0x0a,
	0x39, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e,
	0x69, 0x6e, 0x67, 0x5f, 0x4d, 0x61, 0x72, 0x6b, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x65, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x7b, 0x0a, 0x2d, 0x43, 0x50,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67,
	0x5f, 0x52, 0x65, 0x73, 0x65, 0x6e, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x06, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x27,
	0x0a, 0x0f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x30, 0x0a, 0x2e, 0x43, 0x50, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x52, 0x65,
	0x73, 0x65, 0x6e, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3d, 0x0a, 0x25, 0x43, 0x50, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x6c, 0x61, 0x6e, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x4d, 0x0a, 0x26, 0x43, 0x50, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x6c, 0x61, 0x6e, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x23, 0x0a, 0x04, 0x70, 0x6c, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61,
	0x6e, 0x52, 0x04, 0x70, 0x6c, 0x61, 0x6e, 0x22, 0xca, 0x01, 0x0a, 0x2b, 0x43, 0x50, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x53,
	0x65, 0x6e, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0b, 0x70,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x11, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0x82, 0xb5, 0x18, 0x04, 0x65, 0x6e, 0x75, 0x6d, 0x52,
	0x10, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x41, 0x0a, 0x1d, 0x6f, 0x6e, 0x6c, 0x79, 0x5f, 0x65, 0x78, 0x70, 0x6c, 0x69, 0x63,
	0x69, 0x74, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1a, 0x6f, 0x6e, 0x6c, 0x79, 0x45, 0x78,
	0x70, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x65, 0x73, 0x22, 0x2e, 0x0a, 0x2c, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x53, 0x65, 0x6e, 0x64, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x8e, 0x01, 0x0a, 0x32, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x53, 0x65, 0x74, 0x50,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x06, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x61, 0x64, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x61, 0x64, 0x64,
	0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x35, 0x0a, 0x33, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x53, 0x65, 0x74, 0x50,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6f, 0x0a, 0x25,
	0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69,
	0x6e, 0x67, 0x5f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x5f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x04, 0x70, 0x6c, 0x61, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x6c, 0x61, 0x6e, 0x52, 0x04, 0x70, 0x6c, 0x61, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x06,
	0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x28, 0x0a,
	0x26, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e,
	0x69, 0x6e, 0x67, 0x5f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x5f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x81, 0x19, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x5d, 0x0a,
	0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x26, 0x2e, 0x43, 0x50,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67,
	0x5f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x5f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x6c, 0x61, 0x6e, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x79, 0x0a, 0x16,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x50, 0x61, 0x67, 0x65, 0x46, 0x6f,
	0x72, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x12, 0x2e, 0x2e, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x5f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x61,
	0x6c, 0x65, 0x50, 0x61, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x5f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x5f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x61,
	0x6c, 0x65, 0x50, 0x61, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x5f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x76, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x26,
	0x2e, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e,
	0x69, 0x6e, 0x67, 0x5f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x5f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x5d, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x26, 0x2e,
	0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69,
	0x6e, 0x67, 0x5f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x5f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x50, 0x6c, 0x61, 0x6e, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x93,
	0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x69, 0x6e,
	0x67, 0x41, 0x70, 0x70, 0x73, 0x46, 0x6f, 0x72, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x12,
	0x38, 0x2e, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e,
	0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x47, 0x65, 0x74, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73,
	0x69, 0x6e, 0x67, 0x41, 0x70, 0x70, 0x73, 0x46, 0x6f, 0x72, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65,
	0x72, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x43, 0x50, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x47,
	0x65, 0x74, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x69, 0x6e, 0x67, 0x41, 0x70, 0x70,
	0x73, 0x46, 0x6f, 0x72, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x5f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6f, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x2c, 0x2e, 0x43, 0x50, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x5f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x5f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x75, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50,
	0x6c, 0x61, 0x6e, 0x73, 0x46, 0x6f, 0x72, 0x41, 0x70, 0x70, 0x73, 0x12, 0x2e, 0x2e, 0x43, 0x50,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67,
	0x5f, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x6c, 0x61, 0x6e, 0x73, 0x46, 0x6f, 0x72, 0x41,
	0x70, 0x70, 0x73, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x43, 0x50,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67,
	0x5f, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x6c, 0x61, 0x6e, 0x73, 0x46, 0x6f, 0x72, 0x41,
	0x70, 0x70, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7e, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x6c, 0x61, 0x6e, 0x73, 0x46, 0x6f, 0x72, 0x50, 0x61,
	0x72, 0x74, 0x6e, 0x65, 0x72, 0x12, 0x31, 0x2e, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x50, 0x6c, 0x61, 0x6e, 0x73, 0x46, 0x6f, 0x72, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72,
	0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x43, 0x50, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x50, 0x6c, 0x61, 0x6e, 0x73, 0x46, 0x6f, 0x72, 0x50, 0x61, 0x72, 0x74,
	0x6e, 0x65, 0x72, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7e, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x57, 0x65, 0x65, 0x6b,
	0x53, 0x6c, 0x6f, 0x74, 0x73, 0x12, 0x31, 0x2e, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x47, 0x65, 0x74, 0x41, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x57, 0x65, 0x65, 0x6b, 0x53, 0x6c, 0x6f, 0x74, 0x73,
	0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x43, 0x50, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x47, 0x65,
	0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x57, 0x65, 0x65, 0x6b, 0x53, 0x6c,
	0x6f, 0x74, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x07,
	0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x23, 0x2e, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x47, 0x65, 0x74,
	0x50, 0x6c, 0x61, 0x6e, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x43,
	0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e,
	0x67, 0x5f, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x84, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x42, 0x79,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x12, 0x33,
	0x2e, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e,
	0x69, 0x6e, 0x67, 0x5f, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x42, 0x79, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x5f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x6e,
	0x42, 0x79, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79,
	0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x90, 0x01, 0x0a, 0x1b, 0x47, 0x65,
	0x74, 0x50, 0x6c, 0x61, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x49, 0x6e,
	0x44, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x37, 0x2e, 0x43, 0x50, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x47,
	0x65, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x49,
	0x6e, 0x44, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x38, 0x2e, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7b, 0x0a, 0x14,
	0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x53,
	0x69, 0x6e, 0x63, 0x65, 0x12, 0x30, 0x2e, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61,
	0x6e, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x53, 0x69, 0x6e, 0x63, 0x65, 0x5f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x47, 0x65, 0x74, 0x50,
	0x6c, 0x61, 0x6e, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x53, 0x69, 0x6e, 0x63, 0x65,
	0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x93, 0x01, 0x0a, 0x1c, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x46, 0x6f,
	0x72, 0x53, 0x61, 0x6c, 0x65, 0x50, 0x61, 0x67, 0x65, 0x73, 0x12, 0x38, 0x2e, 0x43, 0x50, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f,
	0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e,
	0x46, 0x6f, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x50, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x46, 0x6f, 0x72, 0x53, 0x61, 0x6c,
	0x65, 0x50, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x85, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x6c, 0x61, 0x6e, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x12, 0x32,
	0x2e, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x5f,
	0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e,
	0x53, 0x61, 0x6c, 0x65, 0x73, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x33, 0x2e, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x6c, 0x61, 0x6e, 0x5f, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x6c, 0x61, 0x6e, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x5f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x96, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x53,
	0x61, 0x6c, 0x65, 0x50, 0x61, 0x67, 0x65, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x73, 0x46, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x12, 0x39, 0x2e, 0x43, 0x50, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x47,
	0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x50, 0x61, 0x67, 0x65, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x5f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c,
	0x65, 0x50, 0x61, 0x67, 0x65, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x73, 0x46,
	0x6f, 0x72, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x78, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x2e, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x47, 0x65, 0x74,
	0x53, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x43, 0x50, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x47, 0x65,
	0x74, 0x53, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x96, 0x01, 0x0a, 0x1d, 0x47,
	0x65, 0x74, 0x55, 0x70, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x64, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x39, 0x2e, 0x43,
	0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e,
	0x67, 0x5f, 0x47, 0x65, 0x74, 0x55, 0x70, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x5f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x47, 0x65, 0x74,
	0x55, 0x70, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x64, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x96, 0x01, 0x0a, 0x1d, 0x4d, 0x61, 0x72, 0x6b, 0x4c, 0x6f, 0x63, 0x61,
	0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x39, 0x2e, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x4d, 0x61, 0x72, 0x6b, 0x4c,
	0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x3a, 0x2e, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61,
	0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x4d, 0x61, 0x72, 0x6b, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x65, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x75, 0x0a, 0x12,
	0x52, 0x65, 0x73, 0x65, 0x6e, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x2e, 0x2e, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x52, 0x65, 0x73, 0x65, 0x6e, 0x64, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x52, 0x65, 0x73, 0x65, 0x6e, 0x64, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x0a, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x6c, 0x61,
	0x6e, 0x12, 0x26, 0x2e, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c,
	0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x6c, 0x61,
	0x6e, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x43, 0x50, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x6c, 0x61, 0x6e, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x6f, 0x0a, 0x10, 0x53, 0x65, 0x6e, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x2e, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x53, 0x65, 0x6e, 0x64,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x53, 0x65, 0x6e, 0x64, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x84, 0x01, 0x0a, 0x17, 0x53, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12,
	0x33, 0x2e, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e,
	0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x53, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x53, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x0a, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x26, 0x2e, 0x43, 0x50, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x27, 0x2e, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61,
	0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e,
	0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x13, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x26, 0x2e, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61,
	0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e,
	0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x43, 0x50, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x68, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x50,
	0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x26, 0x2e, 0x43, 0x50, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x27, 0x2e, 0x43, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c,
	0x61, 0x6e, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
}

var (
	file_service_promotionplanning_proto_rawDescOnce sync.Once
	file_service_promotionplanning_proto_rawDescData = file_service_promotionplanning_proto_rawDesc
)

func file_service_promotionplanning_proto_rawDescGZIP() []byte {
	file_service_promotionplanning_proto_rawDescOnce.Do(func() {
		file_service_promotionplanning_proto_rawDescData = protoimpl.X.CompressGZIP(file_service_promotionplanning_proto_rawDescData)
	})
	return file_service_promotionplanning_proto_rawDescData
}

var file_service_promotionplanning_proto_msgTypes = make([]protoimpl.MessageInfo, 59)
var file_service_promotionplanning_proto_goTypes = []any{
	(*CPromotionNotificationResults)(nil),                                                          // 0: CPromotionNotificationResults
	(*CPromotionPlan)(nil),                                                                         // 1: CPromotionPlan
	(*CPromotionPlan_CreateSalePageForPromo_Request)(nil),                                          // 2: CPromotionPlan_CreateSalePageForPromo_Request
	(*CPromotionPlan_CreateSalePageForPromo_Response)(nil),                                         // 3: CPromotionPlan_CreateSalePageForPromo_Response
	(*CPromotionPlan_GetPromotionPlanSalesDaily_Request)(nil),                                      // 4: CPromotionPlan_GetPromotionPlanSalesDaily_Request
	(*CPromotionPlan_GetPromotionPlanSalesDaily_Response)(nil),                                     // 5: CPromotionPlan_GetPromotionPlanSalesDaily_Response
	(*CPromotionPlan_GetPromotionPlanSalesDaily_Response_DailyPromotionSales)(nil),                 // 6: CPromotionPlan_GetPromotionPlanSalesDaily_Response_DailyPromotionSales
	(*CPromotionPlan_GetPromotionPlanSalesDaily_Response_Product)(nil),                             // 7: CPromotionPlan_GetPromotionPlanSalesDaily_Response_Product
	(*CPromotionPlan_GetPromotionPlanSalesDaily_Response_PromotionSaleData)(nil),                   // 8: CPromotionPlan_GetPromotionPlanSalesDaily_Response_PromotionSaleData
	(*CPromotionPlan_SummarySaleResult)(nil),                                                       // 9: CPromotionPlan_SummarySaleResult
	(*CPromotionPlanning_CreatePlan_Request)(nil),                                                  // 10: CPromotionPlanning_CreatePlan_Request
	(*CPromotionPlanning_CreatePlan_Response)(nil),                                                 // 11: CPromotionPlanning_CreatePlan_Response
	(*CPromotionPlanning_DeletePlan_Request)(nil),                                                  // 12: CPromotionPlanning_DeletePlan_Request
	(*CPromotionPlanning_DeletePlan_Response)(nil),                                                 // 13: CPromotionPlanning_DeletePlan_Response
	(*CPromotionPlanning_GetAdvertisingAppsForPartner_Request)(nil),                                // 14: CPromotionPlanning_GetAdvertisingAppsForPartner_Request
	(*CPromotionPlanning_GetAdvertisingAppsForPartner_Response)(nil),                               // 15: CPromotionPlanning_GetAdvertisingAppsForPartner_Response
	(*CPromotionPlanning_GetAdvertisingAppsForPartner_ResponseAdvertisingApp)(nil),                 // 16: CPromotionPlanning_GetAdvertisingAppsForPartner_Response_advertising_app
	(*CPromotionPlanning_GetAllActivePlan_Request)(nil),                                            // 17: CPromotionPlanning_GetAllActivePlan_Request
	(*CPromotionPlanning_GetAllActivePlan_Response)(nil),                                           // 18: CPromotionPlanning_GetAllActivePlan_Response
	(*CPromotionPlanning_GetAllPlansForApps_Request)(nil),                                          // 19: CPromotionPlanning_GetAllPlansForApps_Request
	(*CPromotionPlanning_GetAllPlansForApps_Response)(nil),                                         // 20: CPromotionPlanning_GetAllPlansForApps_Response
	(*CPromotionPlanning_GetAllPlansForApps_Response_CAppIncludedInSales)(nil),                     // 21: CPromotionPlanning_GetAllPlansForApps_Response_CAppIncludedInSales
	(*CPromotionPlanning_GetAllPlansForPartner_Request)(nil),                                       // 22: CPromotionPlanning_GetAllPlansForPartner_Request
	(*CPromotionPlanning_GetAllPlansForPartner_Response)(nil),                                      // 23: CPromotionPlanning_GetAllPlansForPartner_Response
	(*CPromotionPlanning_GetAvailableWeekSlots_Request)(nil),                                       // 24: CPromotionPlanning_GetAvailableWeekSlots_Request
	(*CPromotionPlanning_GetAvailableWeekSlots_Response)(nil),                                      // 25: CPromotionPlanning_GetAvailableWeekSlots_Response
	(*CPromotionPlanning_GetPlan_Request)(nil),                                                     // 26: CPromotionPlanning_GetPlan_Request
	(*CPromotionPlanning_GetPlan_Response)(nil),                                                    // 27: CPromotionPlanning_GetPlan_Response
	(*CPromotionPlanning_GetPlanByInputAccessKey_Request)(nil),                                     // 28: CPromotionPlanning_GetPlanByInputAccessKey_Request
	(*CPromotionPlanning_GetPlanByInputAccessKey_Response)(nil),                                    // 29: CPromotionPlanning_GetPlanByInputAccessKey_Response
	(*CPromotionPlanning_GetPlanCompletedInDateRange_Request)(nil),                                 // 30: CPromotionPlanning_GetPlanCompletedInDateRange_Request
	(*CPromotionPlanning_GetPlanCompletedInDateRange_Response)(nil),                                // 31: CPromotionPlanning_GetPlanCompletedInDateRange_Response
	(*CPromotionPlanning_GetPlansUpdatedSince_Request)(nil),                                        // 32: CPromotionPlanning_GetPlansUpdatedSince_Request
	(*CPromotionPlanning_GetPlansUpdatedSince_Response)(nil),                                       // 33: CPromotionPlanning_GetPlansUpdatedSince_Response
	(*CPromotionPlanning_GetPromotionPlanForSalePages_Request)(nil),                                // 34: CPromotionPlanning_GetPromotionPlanForSalePages_Request
	(*CPromotionPlanning_GetPromotionPlanForSalePages_Request_CSalePage)(nil),                      // 35: CPromotionPlanning_GetPromotionPlanForSalePages_Request_CSalePage
	(*CPromotionPlanning_GetPromotionPlanForSalePages_Response)(nil),                               // 36: CPromotionPlanning_GetPromotionPlanForSalePages_Response
	(*CPromotionPlanning_GetSalePageCandidatesForPromo_Request)(nil),                               // 37: CPromotionPlanning_GetSalePageCandidatesForPromo_Request
	(*CPromotionPlanning_GetSalePageCandidatesForPromo_Response)(nil),                              // 38: CPromotionPlanning_GetSalePageCandidatesForPromo_Response
	(*CPromotionPlanning_GetSalePageCandidatesForPromo_ResponseClan)(nil),                          // 39: CPromotionPlanning_GetSalePageCandidatesForPromo_Response_clan
	(*CPromotionPlanning_GetSalePageCandidatesForPromo_ResponseSalepage)(nil),                      // 40: CPromotionPlanning_GetSalePageCandidatesForPromo_Response_salepage
	(*CPromotionPlanning_GetSentNotification_Request)(nil),                                         // 41: CPromotionPlanning_GetSentNotification_Request
	(*CPromotionPlanning_GetSentNotification_Response)(nil),                                        // 42: CPromotionPlanning_GetSentNotification_Response
	(*CPromotionPlanning_GetUpcomingScheduledDiscounts_Request)(nil),                               // 43: CPromotionPlanning_GetUpcomingScheduledDiscounts_Request
	(*CPromotionPlanning_GetUpcomingScheduledDiscounts_Response)(nil),                              // 44: CPromotionPlanning_GetUpcomingScheduledDiscounts_Response
	(*CPromotionPlanning_GetUpcomingScheduledDiscounts_Response_CUpcomingAppDiscountInfo)(nil),     // 45: CPromotionPlanning_GetUpcomingScheduledDiscounts_Response_CUpcomingAppDiscountInfo
	(*CPromotionPlanning_GetUpcomingScheduledDiscounts_Response_CUpcomingPackageDiscountInfo)(nil), // 46: CPromotionPlanning_GetUpcomingScheduledDiscounts_Response_CUpcomingPackageDiscountInfo
	(*CPromotionPlanning_MarkLocalizationAssetComplete_Request)(nil),                               // 47: CPromotionPlanning_MarkLocalizationAssetComplete_Request
	(*CPromotionPlanning_MarkLocalizationAssetComplete_Response)(nil),                              // 48: CPromotionPlanning_MarkLocalizationAssetComplete_Response
	(*CPromotionPlanning_ResendNotification_Request)(nil),                                          // 49: CPromotionPlanning_ResendNotification_Request
	(*CPromotionPlanning_ResendNotification_Response)(nil),                                         // 50: CPromotionPlanning_ResendNotification_Response
	(*CPromotionPlanning_SearchPlan_Request)(nil),                                                  // 51: CPromotionPlanning_SearchPlan_Request
	(*CPromotionPlanning_SearchPlan_Response)(nil),                                                 // 52: CPromotionPlanning_SearchPlan_Response
	(*CPromotionPlanning_SendNotification_Request)(nil),                                            // 53: CPromotionPlanning_SendNotification_Request
	(*CPromotionPlanning_SendNotification_Response)(nil),                                           // 54: CPromotionPlanning_SendNotification_Response
	(*CPromotionPlanning_SetPromotionEmailTarget_Request)(nil),                                     // 55: CPromotionPlanning_SetPromotionEmailTarget_Request
	(*CPromotionPlanning_SetPromotionEmailTarget_Response)(nil),                                    // 56: CPromotionPlanning_SetPromotionEmailTarget_Response
	(*CPromotionPlanning_UpdatePlan_Request)(nil),                                                  // 57: CPromotionPlanning_UpdatePlan_Request
	(*CPromotionPlanning_UpdatePlan_Response)(nil),                                                 // 58: CPromotionPlanning_UpdatePlan_Response
}
var file_service_promotionplanning_proto_depIdxs = []int32{
	8,  // 0: CPromotionPlan_GetPromotionPlanSalesDaily_Response.sales:type_name -> CPromotionPlan_GetPromotionPlanSalesDaily_Response_PromotionSaleData
	9,  // 1: CPromotionPlan_GetPromotionPlanSalesDaily_Response_DailyPromotionSales.summary_sales:type_name -> CPromotionPlan_SummarySaleResult
	9,  // 2: CPromotionPlan_GetPromotionPlanSalesDaily_Response_Product.summary_sales:type_name -> CPromotionPlan_SummarySaleResult
	6,  // 3: CPromotionPlan_GetPromotionPlanSalesDaily_Response_Product.daily_promo_sales:type_name -> CPromotionPlan_GetPromotionPlanSalesDaily_Response_DailyPromotionSales
	6,  // 4: CPromotionPlan_GetPromotionPlanSalesDaily_Response_PromotionSaleData.daily_promo_sales:type_name -> CPromotionPlan_GetPromotionPlanSalesDaily_Response_DailyPromotionSales
	9,  // 5: CPromotionPlan_GetPromotionPlanSalesDaily_Response_PromotionSaleData.summary_sales:type_name -> CPromotionPlan_SummarySaleResult
	7,  // 6: CPromotionPlan_GetPromotionPlanSalesDaily_Response_PromotionSaleData.products:type_name -> CPromotionPlan_GetPromotionPlanSalesDaily_Response_Product
	1,  // 7: CPromotionPlanning_CreatePlan_Request.plan:type_name -> CPromotionPlan
	16, // 8: CPromotionPlanning_GetAdvertisingAppsForPartner_Response.advertising_apps:type_name -> CPromotionPlanning_GetAdvertisingAppsForPartner_Response_advertising_app
	1,  // 9: CPromotionPlanning_GetAllActivePlan_Response.plan:type_name -> CPromotionPlan
	1,  // 10: CPromotionPlanning_GetAllPlansForApps_Response.plans:type_name -> CPromotionPlan
	21, // 11: CPromotionPlanning_GetAllPlansForApps_Response.apps_included_in_sales:type_name -> CPromotionPlanning_GetAllPlansForApps_Response_CAppIncludedInSales
	1,  // 12: CPromotionPlanning_GetAllPlansForPartner_Response.plans:type_name -> CPromotionPlan
	1,  // 13: CPromotionPlanning_GetPlan_Response.plan:type_name -> CPromotionPlan
	1,  // 14: CPromotionPlanning_GetPlanByInputAccessKey_Response.plan:type_name -> CPromotionPlan
	1,  // 15: CPromotionPlanning_GetPlanCompletedInDateRange_Response.plans:type_name -> CPromotionPlan
	1,  // 16: CPromotionPlanning_GetPlansUpdatedSince_Response.plans:type_name -> CPromotionPlan
	35, // 17: CPromotionPlanning_GetPromotionPlanForSalePages_Request.request_list:type_name -> CPromotionPlanning_GetPromotionPlanForSalePages_Request_CSalePage
	1,  // 18: CPromotionPlanning_GetPromotionPlanForSalePages_Response.plans:type_name -> CPromotionPlan
	39, // 19: CPromotionPlanning_GetSalePageCandidatesForPromo_Response.clans:type_name -> CPromotionPlanning_GetSalePageCandidatesForPromo_Response_clan
	40, // 20: CPromotionPlanning_GetSalePageCandidatesForPromo_Response_clan.sale_pages:type_name -> CPromotionPlanning_GetSalePageCandidatesForPromo_Response_salepage
	0,  // 21: CPromotionPlanning_GetSentNotification_Response.results:type_name -> CPromotionNotificationResults
	46, // 22: CPromotionPlanning_GetUpcomingScheduledDiscounts_Response.package_details:type_name -> CPromotionPlanning_GetUpcomingScheduledDiscounts_Response_CUpcomingPackageDiscountInfo
	45, // 23: CPromotionPlanning_GetUpcomingScheduledDiscounts_Response.app_details:type_name -> CPromotionPlanning_GetUpcomingScheduledDiscounts_Response_CUpcomingAppDiscountInfo
	1,  // 24: CPromotionPlanning_SearchPlan_Response.plan:type_name -> CPromotionPlan
	1,  // 25: CPromotionPlanning_UpdatePlan_Request.plan:type_name -> CPromotionPlan
	10, // 26: PromotionPlanning.CreatePlan:input_type -> CPromotionPlanning_CreatePlan_Request
	2,  // 27: PromotionPlanning.CreateSalePageForPromo:input_type -> CPromotionPlan_CreateSalePageForPromo_Request
	10, // 28: PromotionPlanning.CreateTentativePlan:input_type -> CPromotionPlanning_CreatePlan_Request
	12, // 29: PromotionPlanning.DeletePlan:input_type -> CPromotionPlanning_DeletePlan_Request
	14, // 30: PromotionPlanning.GetAdvertisingAppsForPartner:input_type -> CPromotionPlanning_GetAdvertisingAppsForPartner_Request
	17, // 31: PromotionPlanning.GetAllActivePlan:input_type -> CPromotionPlanning_GetAllActivePlan_Request
	19, // 32: PromotionPlanning.GetAllPlansForApps:input_type -> CPromotionPlanning_GetAllPlansForApps_Request
	22, // 33: PromotionPlanning.GetAllPlansForPartner:input_type -> CPromotionPlanning_GetAllPlansForPartner_Request
	24, // 34: PromotionPlanning.GetAvailableWeekSlots:input_type -> CPromotionPlanning_GetAvailableWeekSlots_Request
	26, // 35: PromotionPlanning.GetPlan:input_type -> CPromotionPlanning_GetPlan_Request
	28, // 36: PromotionPlanning.GetPlanByInputAccessKey:input_type -> CPromotionPlanning_GetPlanByInputAccessKey_Request
	30, // 37: PromotionPlanning.GetPlanCompletedInDateRange:input_type -> CPromotionPlanning_GetPlanCompletedInDateRange_Request
	32, // 38: PromotionPlanning.GetPlansUpdatedSince:input_type -> CPromotionPlanning_GetPlansUpdatedSince_Request
	34, // 39: PromotionPlanning.GetPromotionPlanForSalePages:input_type -> CPromotionPlanning_GetPromotionPlanForSalePages_Request
	4,  // 40: PromotionPlanning.GetPromotionPlanSalesDaily:input_type -> CPromotionPlan_GetPromotionPlanSalesDaily_Request
	37, // 41: PromotionPlanning.GetSalePageCandidatesForPromo:input_type -> CPromotionPlanning_GetSalePageCandidatesForPromo_Request
	41, // 42: PromotionPlanning.GetSentNotification:input_type -> CPromotionPlanning_GetSentNotification_Request
	43, // 43: PromotionPlanning.GetUpcomingScheduledDiscounts:input_type -> CPromotionPlanning_GetUpcomingScheduledDiscounts_Request
	47, // 44: PromotionPlanning.MarkLocalizationAssetComplete:input_type -> CPromotionPlanning_MarkLocalizationAssetComplete_Request
	49, // 45: PromotionPlanning.ResendNotification:input_type -> CPromotionPlanning_ResendNotification_Request
	51, // 46: PromotionPlanning.SearchPlan:input_type -> CPromotionPlanning_SearchPlan_Request
	53, // 47: PromotionPlanning.SendNotification:input_type -> CPromotionPlanning_SendNotification_Request
	55, // 48: PromotionPlanning.SetPromotionEmailTarget:input_type -> CPromotionPlanning_SetPromotionEmailTarget_Request
	57, // 49: PromotionPlanning.UpdatePlan:input_type -> CPromotionPlanning_UpdatePlan_Request
	57, // 50: PromotionPlanning.UpdatePlanInputData:input_type -> CPromotionPlanning_UpdatePlan_Request
	57, // 51: PromotionPlanning.UpdatePlanPartnerInfo:input_type -> CPromotionPlanning_UpdatePlan_Request
	11, // 52: PromotionPlanning.CreatePlan:output_type -> CPromotionPlanning_CreatePlan_Response
	3,  // 53: PromotionPlanning.CreateSalePageForPromo:output_type -> CPromotionPlan_CreateSalePageForPromo_Response
	11, // 54: PromotionPlanning.CreateTentativePlan:output_type -> CPromotionPlanning_CreatePlan_Response
	13, // 55: PromotionPlanning.DeletePlan:output_type -> CPromotionPlanning_DeletePlan_Response
	15, // 56: PromotionPlanning.GetAdvertisingAppsForPartner:output_type -> CPromotionPlanning_GetAdvertisingAppsForPartner_Response
	18, // 57: PromotionPlanning.GetAllActivePlan:output_type -> CPromotionPlanning_GetAllActivePlan_Response
	20, // 58: PromotionPlanning.GetAllPlansForApps:output_type -> CPromotionPlanning_GetAllPlansForApps_Response
	23, // 59: PromotionPlanning.GetAllPlansForPartner:output_type -> CPromotionPlanning_GetAllPlansForPartner_Response
	25, // 60: PromotionPlanning.GetAvailableWeekSlots:output_type -> CPromotionPlanning_GetAvailableWeekSlots_Response
	27, // 61: PromotionPlanning.GetPlan:output_type -> CPromotionPlanning_GetPlan_Response
	29, // 62: PromotionPlanning.GetPlanByInputAccessKey:output_type -> CPromotionPlanning_GetPlanByInputAccessKey_Response
	31, // 63: PromotionPlanning.GetPlanCompletedInDateRange:output_type -> CPromotionPlanning_GetPlanCompletedInDateRange_Response
	33, // 64: PromotionPlanning.GetPlansUpdatedSince:output_type -> CPromotionPlanning_GetPlansUpdatedSince_Response
	36, // 65: PromotionPlanning.GetPromotionPlanForSalePages:output_type -> CPromotionPlanning_GetPromotionPlanForSalePages_Response
	5,  // 66: PromotionPlanning.GetPromotionPlanSalesDaily:output_type -> CPromotionPlan_GetPromotionPlanSalesDaily_Response
	38, // 67: PromotionPlanning.GetSalePageCandidatesForPromo:output_type -> CPromotionPlanning_GetSalePageCandidatesForPromo_Response
	42, // 68: PromotionPlanning.GetSentNotification:output_type -> CPromotionPlanning_GetSentNotification_Response
	44, // 69: PromotionPlanning.GetUpcomingScheduledDiscounts:output_type -> CPromotionPlanning_GetUpcomingScheduledDiscounts_Response
	48, // 70: PromotionPlanning.MarkLocalizationAssetComplete:output_type -> CPromotionPlanning_MarkLocalizationAssetComplete_Response
	50, // 71: PromotionPlanning.ResendNotification:output_type -> CPromotionPlanning_ResendNotification_Response
	52, // 72: PromotionPlanning.SearchPlan:output_type -> CPromotionPlanning_SearchPlan_Response
	54, // 73: PromotionPlanning.SendNotification:output_type -> CPromotionPlanning_SendNotification_Response
	56, // 74: PromotionPlanning.SetPromotionEmailTarget:output_type -> CPromotionPlanning_SetPromotionEmailTarget_Response
	58, // 75: PromotionPlanning.UpdatePlan:output_type -> CPromotionPlanning_UpdatePlan_Response
	58, // 76: PromotionPlanning.UpdatePlanInputData:output_type -> CPromotionPlanning_UpdatePlan_Response
	58, // 77: PromotionPlanning.UpdatePlanPartnerInfo:output_type -> CPromotionPlanning_UpdatePlan_Response
	52, // [52:78] is the sub-list for method output_type
	26, // [26:52] is the sub-list for method input_type
	26, // [26:26] is the sub-list for extension type_name
	26, // [26:26] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() { file_service_promotionplanning_proto_init() }
func file_service_promotionplanning_proto_init() {
	if File_service_promotionplanning_proto != nil {
		return
	}
	file_common_base_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_service_promotionplanning_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*CPromotionNotificationResults); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_promotionplanning_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*CPromotionPlan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_promotionplanning_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*CPromotionPlan_CreateSalePageForPromo_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_promotionplanning_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*CPromotionPlan_CreateSalePageForPromo_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_promotionplanning_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*CPromotionPlan_GetPromotionPlanSalesDaily_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_promotionplanning_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*CPromotionPlan_GetPromotionPlanSalesDaily_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_promotionplanning_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*CPromotionPlan_GetPromotionPlanSalesDaily_Response_DailyPromotionSales); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_promotionplanning_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*CPromotionPlan_GetPromotionPlanSalesDaily_Response_Product); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_promotionplanning_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*CPromotionPlan_GetPromotionPlanSalesDaily_Response_PromotionSaleData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_promotionplanning_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*CPromotionPlan_SummarySaleResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_promotionplanning_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*CPromotionPlanning_CreatePlan_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_promotionplanning_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*CPromotionPlanning_CreatePlan_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_promotionplanning_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*CPromotionPlanning_DeletePlan_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_promotionplanning_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*CPromotionPlanning_DeletePlan_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_promotionplanning_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*CPromotionPlanning_GetAdvertisingAppsForPartner_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_promotionplanning_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*CPromotionPlanning_GetAdvertisingAppsForPartner_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_promotionplanning_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*CPromotionPlanning_GetAdvertisingAppsForPartner_ResponseAdvertisingApp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_promotionplanning_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*CPromotionPlanning_GetAllActivePlan_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_promotionplanning_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*CPromotionPlanning_GetAllActivePlan_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_promotionplanning_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*CPromotionPlanning_GetAllPlansForApps_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_promotionplanning_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*CPromotionPlanning_GetAllPlansForApps_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_promotionplanning_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*CPromotionPlanning_GetAllPlansForApps_Response_CAppIncludedInSales); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_promotionplanning_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*CPromotionPlanning_GetAllPlansForPartner_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_promotionplanning_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*CPromotionPlanning_GetAllPlansForPartner_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_promotionplanning_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*CPromotionPlanning_GetAvailableWeekSlots_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_promotionplanning_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*CPromotionPlanning_GetAvailableWeekSlots_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_promotionplanning_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*CPromotionPlanning_GetPlan_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_promotionplanning_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*CPromotionPlanning_GetPlan_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_promotionplanning_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*CPromotionPlanning_GetPlanByInputAccessKey_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_promotionplanning_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*CPromotionPlanning_GetPlanByInputAccessKey_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_promotionplanning_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*CPromotionPlanning_GetPlanCompletedInDateRange_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_promotionplanning_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*CPromotionPlanning_GetPlanCompletedInDateRange_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_promotionplanning_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*CPromotionPlanning_GetPlansUpdatedSince_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_promotionplanning_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*CPromotionPlanning_GetPlansUpdatedSince_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_promotionplanning_proto_msgTypes[34].Exporter = func(v any, i int) any {
			switch v := v.(*CPromotionPlanning_GetPromotionPlanForSalePages_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_promotionplanning_proto_msgTypes[35].Exporter = func(v any, i int) any {
			switch v := v.(*CPromotionPlanning_GetPromotionPlanForSalePages_Request_CSalePage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_promotionplanning_proto_msgTypes[36].Exporter = func(v any, i int) any {
			switch v := v.(*CPromotionPlanning_GetPromotionPlanForSalePages_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_promotionplanning_proto_msgTypes[37].Exporter = func(v any, i int) any {
			switch v := v.(*CPromotionPlanning_GetSalePageCandidatesForPromo_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_promotionplanning_proto_msgTypes[38].Exporter = func(v any, i int) any {
			switch v := v.(*CPromotionPlanning_GetSalePageCandidatesForPromo_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_promotionplanning_proto_msgTypes[39].Exporter = func(v any, i int) any {
			switch v := v.(*CPromotionPlanning_GetSalePageCandidatesForPromo_ResponseClan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_promotionplanning_proto_msgTypes[40].Exporter = func(v any, i int) any {
			switch v := v.(*CPromotionPlanning_GetSalePageCandidatesForPromo_ResponseSalepage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_promotionplanning_proto_msgTypes[41].Exporter = func(v any, i int) any {
			switch v := v.(*CPromotionPlanning_GetSentNotification_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_promotionplanning_proto_msgTypes[42].Exporter = func(v any, i int) any {
			switch v := v.(*CPromotionPlanning_GetSentNotification_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_promotionplanning_proto_msgTypes[43].Exporter = func(v any, i int) any {
			switch v := v.(*CPromotionPlanning_GetUpcomingScheduledDiscounts_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_promotionplanning_proto_msgTypes[44].Exporter = func(v any, i int) any {
			switch v := v.(*CPromotionPlanning_GetUpcomingScheduledDiscounts_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_promotionplanning_proto_msgTypes[45].Exporter = func(v any, i int) any {
			switch v := v.(*CPromotionPlanning_GetUpcomingScheduledDiscounts_Response_CUpcomingAppDiscountInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_promotionplanning_proto_msgTypes[46].Exporter = func(v any, i int) any {
			switch v := v.(*CPromotionPlanning_GetUpcomingScheduledDiscounts_Response_CUpcomingPackageDiscountInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_promotionplanning_proto_msgTypes[47].Exporter = func(v any, i int) any {
			switch v := v.(*CPromotionPlanning_MarkLocalizationAssetComplete_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_promotionplanning_proto_msgTypes[48].Exporter = func(v any, i int) any {
			switch v := v.(*CPromotionPlanning_MarkLocalizationAssetComplete_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_promotionplanning_proto_msgTypes[49].Exporter = func(v any, i int) any {
			switch v := v.(*CPromotionPlanning_ResendNotification_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_promotionplanning_proto_msgTypes[50].Exporter = func(v any, i int) any {
			switch v := v.(*CPromotionPlanning_ResendNotification_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_promotionplanning_proto_msgTypes[51].Exporter = func(v any, i int) any {
			switch v := v.(*CPromotionPlanning_SearchPlan_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_promotionplanning_proto_msgTypes[52].Exporter = func(v any, i int) any {
			switch v := v.(*CPromotionPlanning_SearchPlan_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_promotionplanning_proto_msgTypes[53].Exporter = func(v any, i int) any {
			switch v := v.(*CPromotionPlanning_SendNotification_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_promotionplanning_proto_msgTypes[54].Exporter = func(v any, i int) any {
			switch v := v.(*CPromotionPlanning_SendNotification_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_promotionplanning_proto_msgTypes[55].Exporter = func(v any, i int) any {
			switch v := v.(*CPromotionPlanning_SetPromotionEmailTarget_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_promotionplanning_proto_msgTypes[56].Exporter = func(v any, i int) any {
			switch v := v.(*CPromotionPlanning_SetPromotionEmailTarget_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_promotionplanning_proto_msgTypes[57].Exporter = func(v any, i int) any {
			switch v := v.(*CPromotionPlanning_UpdatePlan_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_promotionplanning_proto_msgTypes[58].Exporter = func(v any, i int) any {
			switch v := v.(*CPromotionPlanning_UpdatePlan_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_service_promotionplanning_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   59,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_promotionplanning_proto_goTypes,
		DependencyIndexes: file_service_promotionplanning_proto_depIdxs,
		MessageInfos:      file_service_promotionplanning_proto_msgTypes,
	}.Build()
	File_service_promotionplanning_proto = out.File
	file_service_promotionplanning_proto_rawDesc = nil
	file_service_promotionplanning_proto_goTypes = nil
	file_service_promotionplanning_proto_depIdxs = nil
}
